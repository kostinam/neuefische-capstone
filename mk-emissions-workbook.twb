<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='fao_trade_matrix (capstone_envirolytics.fao_trade_matrix) (postgres)' inline='true' name='federated.1oao44206i063g19f2gvs0yh81pg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.1hdap0z1up7dy91al6s5z1lhafaf'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='margaritakostina' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>reporting_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reporting_country]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>reporting_country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>partner_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[partner_country]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>partner_country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_code]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>item_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>export_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[export_quantity]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>export_quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>export_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[export_value]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>export_value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>import_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[import_quantity]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>import_quantity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>import_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[import_value]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>import_value</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='fao_trade_matrix' datatype='table' name='[__tableau_internal_object_id__].[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]' role='measure' type='quantitative' />
      <column caption='Export Quantity' datatype='real' name='[export_quantity]' role='measure' type='quantitative' />
      <column caption='Export Value' datatype='real' name='[export_value]' role='measure' type='quantitative' />
      <column caption='Import Quantity' datatype='real' name='[import_quantity]' role='measure' type='quantitative' />
      <column caption='Import Value' datatype='real' name='[import_value]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Item Code' datatype='integer' name='[item_code]' role='dimension' type='ordinal' />
      <column caption='Partner Country' datatype='string' name='[partner_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Reporting Country' datatype='string' name='[reporting_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='fao_trade_matrix' id='fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967'>
            <properties context=''>
              <relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' inline='true' name='federated.0gmzic2022xdk610vqg5706mizs8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0cuyklc14b6o3k1bfibco0rodauh'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='margaritakostina' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='mk_import_emissions' table='[capstone_envirolytics].[mk_import_emissions]' type='table'>
          <columns>
            <column datatype='datetime' date-parse-format='yyyy' name='import_year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='production_and_emissions' table='[capstone_envirolytics].[production_and_emissions]' type='table'>
            <columns>
              <column datatype='datetime' date-parse-format='yyyy' name='year' />
            </columns>
          </relation>
          <relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='mk_import_emissions' table='[capstone_envirolytics].[mk_import_emissions]' type='table'>
            <columns>
              <column datatype='datetime' date-parse-format='yyyy' name='import_year' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[area]' value='[production_and_emissions].[area]' />
          <map key='[area_group]' value='[production_and_emissions].[area_group]' />
          <map key='[area_harvested_in_ha]' value='[production_and_emissions].[area_harvested_in_ha]' />
          <map key='[egg_or_milk_animals_in_an]' value='[production_and_emissions].[egg_or_milk_animals_in_an]' />
          <map key='[emissions_ch4_in_kt]' value='[production_and_emissions].[emissions_ch4_in_kt]' />
          <map key='[emissions_co2eq_calc_in_kt]' value='[production_and_emissions].[emissions_co2eq_calc_in_kt]' />
          <map key='[emissions_co2eq_combined_in_kt]' value='[production_and_emissions].[emissions_co2eq_combined_in_kt]' />
          <map key='[emissions_co2eq_in_kt]' value='[production_and_emissions].[emissions_co2eq_in_kt]' />
          <map key='[emissions_intensity_calc_in_kg_co2eq_per_kg]' value='[production_and_emissions].[emissions_intensity_calc_in_kg_co2eq_per_kg]' />
          <map key='[emissions_intensity_combined_in_kg_co2eq_per_kg]' value='[production_and_emissions].[emissions_intensity_combined_in_kg_co2eq_per_kg]' />
          <map key='[emissions_intensity_in_kg_co2eq_per_kg]' value='[production_and_emissions].[emissions_intensity_in_kg_co2eq_per_kg]' />
          <map key='[emissions_n2o_in_kt]' value='[production_and_emissions].[emissions_n2o_in_kt]' />
          <map key='[import_year]' value='[mk_import_emissions].[import_year]' />
          <map key='[item (mk_import_emissions)]' value='[mk_import_emissions].[item]' />
          <map key='[item]' value='[production_and_emissions].[item]' />
          <map key='[item_category]' value='[production_and_emissions].[item_category]' />
          <map key='[item_code]' value='[production_and_emissions].[item_code]' />
          <map key='[item_group]' value='[production_and_emissions].[item_group]' />
          <map key='[population]' value='[production_and_emissions].[population]' />
          <map key='[producing_animals_slaughtered_in_an]' value='[production_and_emissions].[producing_animals_slaughtered_in_an]' />
          <map key='[production_emissions_in_t]' value='[production_and_emissions].[production_emissions_in_t]' />
          <map key='[production_in_t]' value='[production_and_emissions].[production_in_t]' />
          <map key='[source_emissions]' value='[production_and_emissions].[source_emissions]' />
          <map key='[stocks_in_an]' value='[production_and_emissions].[stocks_in_an]' />
          <map key='[total_import_emission_intensity]' value='[mk_import_emissions].[total_import_emission_intensity]' />
          <map key='[total_import_share]' value='[mk_import_emissions].[total_import_share]' />
          <map key='[year]' value='[production_and_emissions].[year]' />
          <map key='[yield]' value='[production_and_emissions].[yield]' />
          <map key='[yield_unit]' value='[production_and_emissions].[yield_unit]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_group]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_code]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item_group]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_group</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item_category]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_harvested_in_ha</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_harvested_in_ha]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area_harvested_in_ha</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stocks_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stocks_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>stocks_in_an</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>producing_animals_slaughtered_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[producing_animals_slaughtered_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>producing_animals_slaughtered_in_an</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>egg_or_milk_animals_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[egg_or_milk_animals_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>egg_or_milk_animals_in_an</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_in_t</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_in_t]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>production_in_t</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yield]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>yield</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yield_unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yield_unit]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>yield_unit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_ch4_in_kt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emissions_ch4_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_ch4_in_kt</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_n2o_in_kt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emissions_n2o_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_n2o_in_kt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_calc_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_calc_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_calc_in_kt</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_calc_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_emissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_emissions]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>source_emissions</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_in_kt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_emissions_in_t</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_emissions_in_t]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>production_emissions_in_t</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_combined_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_combined_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_combined_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_combined_in_kt</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item (mk_import_emissions)]</local-name>
            <parent-name>[mk_import_emissions]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>import_year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[import_year]</local-name>
            <parent-name>[mk_import_emissions]</parent-name>
            <remote-alias>import_year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_import_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_import_share]</local-name>
            <parent-name>[mk_import_emissions]</parent-name>
            <remote-alias>total_import_share</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_import_emission_intensity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_import_emission_intensity]</local-name>
            <parent-name>[mk_import_emissions]</parent-name>
            <remote-alias>total_import_emission_intensity</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Production in T per capita' datatype='real' name='[Calculation_590816019423174656]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([production_in_t])/SUM([population])' />
      </column>
      <column caption='Emissions per capita' datatype='real' name='[Calculation_86412862489366529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[emissions_co2eq_in_kt]/[population]' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Emissions Combined CO2Eq in Kt' datatype='real' name='[Calculation_972425720154873863]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[emissions_co2eq_calc_in_kt]+[emissions_co2eq_in_kt]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='mk_import_emissions' datatype='table' name='[__tableau_internal_object_id__].[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='production_and_emissions' datatype='table' name='[__tableau_internal_object_id__].[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
          <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
        </semantic-values>
      </column>
      <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
      <column caption='Area Harvested In Ha' datatype='real' name='[area_harvested_in_ha]' role='measure' type='quantitative' />
      <column caption='Egg Or Milk Animals In An' datatype='real' name='[egg_or_milk_animals_in_an]' role='measure' type='quantitative' />
      <column caption='Emissions Ch4 In Kt' datatype='real' name='[emissions_ch4_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Co2Eq In Kt' datatype='real' name='[emissions_co2eq_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity Calc In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_calc_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions N2O In Kt' datatype='real' name='[emissions_n2o_in_kt]' role='measure' type='quantitative' />
      <column aggregation='Count' caption='Import Year' datatype='datetime' datatype-customized='true' name='[import_year]' role='dimension' type='quantitative' />
      <column caption='Item (Mk Import Emissions)' datatype='string' name='[item (mk_import_emissions)]' role='dimension' type='nominal' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
      <column caption='Item Code' datatype='integer' name='[item_code]' role='dimension' type='ordinal' />
      <column caption='Item Group' datatype='string' name='[item_group]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Producing Animals Slaughtered In An' datatype='real' name='[producing_animals_slaughtered_in_an]' role='measure' type='quantitative' />
      <column caption='Production Emissions In T' datatype='real' name='[production_emissions_in_t]' role='measure' type='quantitative' />
      <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
      <column caption='Source Emissions' datatype='string' name='[source_emissions]' role='dimension' type='nominal' />
      <column caption='Stocks In An' datatype='real' name='[stocks_in_an]' role='measure' type='quantitative' />
      <column caption='Total Import Emission Intensity' datatype='real' name='[total_import_emission_intensity]' role='measure' type='quantitative' />
      <column caption='Total Import Share' datatype='real' name='[total_import_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column caption='Yield' datatype='real' name='[yield]' role='measure' type='quantitative' />
      <column caption='Yield Unit' datatype='string' name='[yield_unit]' role='dimension' type='nominal' />
      <column-instance column='[emissions_ch4_in_kt]' derivation='Avg' name='[avg:emissions_ch4_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
      <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_import_emission_intensity]' derivation='Median' name='[med:total_import_emission_intensity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
      <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
      <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[production_in_t]' derivation='Median' name='[pcto:med:production_in_t:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_86412862489366529]' derivation='Sum' name='[sum:Calculation_86412862489366529:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_ch4_in_kt]' derivation='Sum' name='[sum:emissions_ch4_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_co2eq_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Sum' name='[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_n2o_in_kt]' derivation='Sum' name='[sum:emissions_n2o_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
      <group caption='Items with known emissions' name='[Items with known emissions]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[item]' member='&quot;Barley&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Beans, dry&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Hen eggs in shell, fresh&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Maize (corn)&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of buffalo, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of cattle with the bone, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of chickens, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of goat, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of pig with the bone, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of sheep, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Millet&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Oats&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Potatoes&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of buffalo&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of camel&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of cattle&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of goats&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of sheep&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Rice&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Rye&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Sorghum&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Soya beans&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Sugar cane&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Wheat&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/margaritakostina/Documents/My Tableau Repository/Datasources/production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/17/2024 01:24:12 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640' table='[Extract].[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4' table='[Extract].[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]' type='table' />
            <relation name='mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640' table='[Extract].[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[area]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[area]' />
            <map key='[area_group]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[area_group]' />
            <map key='[area_harvested_in_ha]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[area_harvested_in_ha]' />
            <map key='[egg_or_milk_animals_in_an]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[egg_or_milk_animals_in_an]' />
            <map key='[emissions_ch4_in_kt]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_ch4_in_kt]' />
            <map key='[emissions_co2eq_calc_in_kt]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_co2eq_calc_in_kt]' />
            <map key='[emissions_co2eq_combined_in_kt]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_co2eq_combined_in_kt]' />
            <map key='[emissions_co2eq_in_kt]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_co2eq_in_kt]' />
            <map key='[emissions_intensity_calc_in_kg_co2eq_per_kg]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_intensity_calc_in_kg_co2eq_per_kg]' />
            <map key='[emissions_intensity_combined_in_kg_co2eq_per_kg]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_intensity_combined_in_kg_co2eq_per_kg]' />
            <map key='[emissions_intensity_in_kg_co2eq_per_kg]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_intensity_in_kg_co2eq_per_kg]' />
            <map key='[emissions_n2o_in_kt]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[emissions_n2o_in_kt]' />
            <map key='[import_year]' value='[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640].[import_year]' />
            <map key='[item (mk_import_emissions)]' value='[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640].[item]' />
            <map key='[item]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[item]' />
            <map key='[item_category]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[item_category]' />
            <map key='[item_code]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[item_code]' />
            <map key='[item_group]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[item_group]' />
            <map key='[population]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[population]' />
            <map key='[producing_animals_slaughtered_in_an]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[producing_animals_slaughtered_in_an]' />
            <map key='[production_emissions_in_t]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[production_emissions_in_t]' />
            <map key='[production_in_t]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[production_in_t]' />
            <map key='[source_emissions]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[source_emissions]' />
            <map key='[stocks_in_an]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[stocks_in_an]' />
            <map key='[total_import_emission_intensity]' value='[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640].[total_import_emission_intensity]' />
            <map key='[total_import_share]' value='[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640].[total_import_share]' />
            <map key='[year]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[year]' />
            <map key='[yield]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[yield]' />
            <map key='[yield_unit]' value='[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4].[yield_unit]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' increment-value='%null%' refresh-type='create' rows-inserted='1343270' timestamp-start='2024-01-17 13:23:21.997' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>area</remote-alias>
              <ordinal>0</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_group]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>area_group</remote-alias>
              <ordinal>1</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>135</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>2</ordinal>
              <family>production_and_emissions</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>production_and_emissions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69553</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>item</remote-alias>
              <ordinal>4</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>299</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[item_code]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>item_code</remote-alias>
              <ordinal>5</ordinal>
              <family>production_and_emissions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>299</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_group]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>item_group</remote-alias>
              <ordinal>6</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_category]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>item_category</remote-alias>
              <ordinal>7</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_harvested_in_ha</remote-name>
              <remote-type>5</remote-type>
              <local-name>[area_harvested_in_ha]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>area_harvested_in_ha</remote-alias>
              <ordinal>8</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>84793</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stocks_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stocks_in_an]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>stocks_in_an</remote-alias>
              <ordinal>9</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41843</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>producing_animals_slaughtered_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[producing_animals_slaughtered_in_an]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>producing_animals_slaughtered_in_an</remote-alias>
              <ordinal>10</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60615</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>egg_or_milk_animals_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[egg_or_milk_animals_in_an]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>egg_or_milk_animals_in_an</remote-alias>
              <ordinal>11</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45269</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_in_t</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_in_t]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>production_in_t</remote-alias>
              <ordinal>12</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182564</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yield</remote-name>
              <remote-type>5</remote-type>
              <local-name>[yield]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>yield</remote-alias>
              <ordinal>13</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>170066</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yield_unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[yield_unit]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>yield_unit</remote-alias>
              <ordinal>14</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_ch4_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_ch4_in_kt]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_ch4_in_kt</remote-alias>
              <ordinal>15</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55058</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_n2o_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_n2o_in_kt]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_n2o_in_kt</remote-alias>
              <ordinal>16</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24938</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_calc_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_calc_in_kt]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_co2eq_calc_in_kt</remote-alias>
              <ordinal>17</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62702</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_calc_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>18</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14374</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_emissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_emissions]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>source_emissions</remote-alias>
              <ordinal>19</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_in_kt]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_co2eq_in_kt</remote-alias>
              <ordinal>20</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>281515</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_intensity_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>21</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123212</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_emissions_in_t</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_emissions_in_t]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>production_emissions_in_t</remote-alias>
              <ordinal>22</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107642</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_combined_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>23</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60525</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_combined_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_combined_in_kt]</local-name>
              <parent-name>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</parent-name>
              <remote-alias>emissions_co2eq_combined_in_kt</remote-alias>
              <ordinal>24</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item (mk_import_emissions)]</local-name>
              <parent-name>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</parent-name>
              <remote-alias>item</remote-alias>
              <ordinal>25</ordinal>
              <family>mk_import_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>import_year</remote-name>
              <remote-type>135</remote-type>
              <local-name>[import_year]</local-name>
              <parent-name>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</parent-name>
              <remote-alias>import_year</remote-alias>
              <ordinal>26</ordinal>
              <family>mk_import_emissions</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_import_share</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_import_share]</local-name>
              <parent-name>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</parent-name>
              <remote-alias>total_import_share</remote-alias>
              <ordinal>27</ordinal>
              <family>mk_import_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_import_emission_intensity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_import_emission_intensity]</local-name>
              <parent-name>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</parent-name>
              <remote-alias>total_import_emission_intensity</remote-alias>
              <ordinal>28</ordinal>
              <family>mk_import_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>575</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Items with known emissions]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;Meat of pig with the bone\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Barley&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Sorghum&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Meat of buffalo\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Potatoes&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Meat of sheep\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Meat of cattle with the bone\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Rice&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Beans\, dry&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Soya beans&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Raw milk of goats&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Meat of chickens\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Raw milk of buffalo&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Raw milk of camel&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Raw milk of sheep&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Rye&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Millet&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Meat of goat\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Hen eggs in shell\, fresh&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Sugar cane&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Raw milk of cattle&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Oats&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Maize (corn\)&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Wheat&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia PDR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium-Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan (former)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yugoslav SFR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Items with known emissions:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item_category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Crops Processed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Livestock processed&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Livestock primary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Live Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crops, primary&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Asparagus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Butter of cow milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cheese from skimmed cow milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cranberries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fonio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horses&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maté leaves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meat of pig with the bone, fresh or chilled&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other berries and fruits of the genus vaccinium n.e.c.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pears&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ramie, raw or retted&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whey, condensed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abaca, manila hemp, raw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Castor oil seeds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coconut oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edible offals of horses and other equines,  fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green tea (not fermented), black tea (fermented) and partly fermented tea, in immediate packings of a content not exceeding 3 kg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lentils, dry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mushrooms and truffles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oil palm fruit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other stone fruits&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pomelos and grapefruits&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skim milk, condensed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sorghum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tung nuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apples&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cereals n.e.c.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cotton lint, ginned&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fat of camels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hempseed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lupins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meat of buffalo, fresh or chilled&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Onions and shallots, dry (excluding dehydrated)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pyrethrum, dried flowers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sour cherries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strawberries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vetches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bambara beans, dry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chick peas, dry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghee from cow milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kapok fruit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mixed grain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Natural honey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other fruits, n.e.c.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peppermint, spearmint&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Silk-worm cocoons suitable for reeling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tallow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whole milk, evaporated&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asses&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter of goat milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheese from whole cow milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream, fresh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Game meat, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jojoba seeds&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meat of asses, fresh or chilled&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meat of sheep, fresh or chilled&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other camelids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas, dry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rape or colza seed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sheep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunflower-seed oil, crude&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whey, dry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apricots&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buffalo fat, unrendered&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheese from milk of buffalo, fresh or processed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton seed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fat of pigs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linseed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat of cattle with the bone, fresh or chilled&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat of turkeys, fresh or chilled&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Onions and shallots, green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palm oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quinces&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Safflower seed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;String beans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walnuts, in shell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beeswax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cassava leaves&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cloves (whole stems), raw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edible offal of sheep, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green corn (maize)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeks and other alliaceous vegetables&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat of other domestic camelids, fresh or chilled&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oil of palm kernel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other rodents&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plantains and cooking bananas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skim milk and whey powder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Triticale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agave fibres, raw, n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beans, dry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cattle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts, in shell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edible roots and tubers with high starch or inulin content, n.e.c., fresh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Groundnut oil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lettuce and chicory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meat of pigeons and other birds n.e.c., fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Okra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other sugar crops n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poppy seed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Skim milk, evaporated&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soya bean oil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soya beans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beer of barley, malted&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cashew nuts, in shell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chillies and peppers, green (Capsicum spp. and Pimenta spp.)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edible offal of goat, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gooseberries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiwi fruit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mules and hinnies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oil of linseed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other pome fruits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pineapples&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw hides and skins of sheep or lambs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw milk of goats&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tea leaves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yoghurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Areca nuts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Butter and ghee of sheep milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheese from milk of goats, fresh or processed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonseed oil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hop cones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mangoes, guavas and mangosteens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meat of chickens, fresh or chilled&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papayas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quinoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Safflower-seed oil, crude&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watermelons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canary seed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chickens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ducks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ginger, raw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kapokseed in shell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Molasses&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natural rubber in primary forms&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other meat n.e.c. (excluding mammals), fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Persimmons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw hides and skins of buffaloes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw milk of buffalo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tallowtree seeds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil nuts, in shell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cantaloupes and other melons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chicory roots&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edible offal of buffalo, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goat fat, unrendered&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karite nuts (sheanuts)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat of ducks, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nutmeg, mace, cardamoms, raw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other nuts (excluding wild edible nuts and groundnuts), in shell, n.e.c.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pig fat, rendered&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw hides and skins of cattle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw milk of camel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tangerines, mandarins, clementines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bees&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cashewapple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cinnamon and cinnamon-tree flowers, raw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edible offal of pigs, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kola nuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meat of mules, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oil of maize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other pulses n.e.c.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pistachios, in shell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raw milk of sheep&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sisal, raw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tomatoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blueberries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cassava, fresh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cocoa beans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edible offals of camels and other camelids, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Green garlic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lemons and limes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meat of other domestic rodents, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oil of sesame seed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other stimulant, spice and aromatic crops, n.e.c.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plums and sloes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skim milk of cows&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;True hemp, raw or retted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avocados&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buttermilk, dry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherries&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cucumbers and gherkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jute, raw or retted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melonseed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other citrus fruit, n.e.c.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peas, green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rapeseed or canola oil, crude&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheep fat, unrendered&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whole milk powder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Artichokes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butter of buffalo milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cheese from milk of sheep, fresh or processed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cow peas, dry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flax, processed but not spun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Horse meat, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Margarine and shortening&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meat of goat, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other beans, green&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peaches and nectarines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rabbits and hares&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seed cotton, unginned&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unmanufactured tobacco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Almonds, in shell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broad beans and horse beans, green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cattle fat, unrendered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coffee, green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eggplants (aubergines)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Groundnuts, excluding shelled&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hen eggs in shell, fresh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meat of rabbits and hares, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olive oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other tropical fruits, n.e.c.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raw cane or beet sugar (centrifugal only)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raw silk (not thrown)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkeys&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broad beans and horse beans, dry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carrots and turnips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chillies and peppers, dry (Capsicum spp., Pimenta spp.), raw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edible offal of cattle, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenaf, and other textile bast fibres, raw or retted&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meat of geese, fresh or chilled&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other fibre crops, raw, n.e.c.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other oil seeds, n.e.c.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pigeon peas, dry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw hides and skins of goats or kids&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw milk of cattle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yautia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balata, gutta-percha, guayule, chicle and similar natural gums in primary forms or in plates, sheets or strip&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabbages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chestnuts, in shell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Currants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghee from buffalo milk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kapok fibre, raw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meat of camels, fresh or chilled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mustard seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pepper (Piper spp.), raw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raspberries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shorn wool, greasy, including fleece-washed shorn wool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swine / pigs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Whole milk, condensed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anise, badian, coriander, cumin, caraway, fennel and juniper berries, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buckwheat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cauliflowers and broccoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coir, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eggs from other birds in shell, fresh, n.e.c.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hazelnuts, in shell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Locust beans (carobs)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maize (corn)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Olives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other vegetables, fresh n.e.c.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pumpkins, squash and gourds&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Snails, fresh, chilled, frozen, dried, salted or in brine, except sea snails&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanilla, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_ch4_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_ch4_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:med:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_in_kg_co2eq_per_kg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:total_import_emission_intensity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_n2o_in_kt:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mk_import_emissions' id='mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640'>
            <properties context=''>
              <relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='mk_import_emissions' table='[capstone_envirolytics].[mk_import_emissions]' type='table'>
                <columns>
                  <column datatype='datetime' date-parse-format='yyyy' name='import_year' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640' table='[Extract].[mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640]' type='table' />
            </properties>
          </object>
          <object caption='production_and_emissions' id='production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4'>
            <properties context=''>
              <relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='production_and_emissions' table='[capstone_envirolytics].[production_and_emissions]' type='table'>
                <columns>
                  <column datatype='datetime' date-parse-format='yyyy' name='year' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4' table='[Extract].[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[item]' />
                <expression op='[item (mk_import_emissions)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[import_year]' />
              </expression>
            </expression>
            <first-end-point object-id='production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4' />
            <second-end-point object-id='mk_import_emissions (capstone_envirolytics.mk_import_emissions)_64F4CE1C20BA413EBD4102EF3F34D640' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_B6F90EAC8C6646E9A1B4BA4BA46313FA]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Item share in total production' />
      <command command='tsc:brush'>
        <param name='field-captions' value='IN/OUT(Items with known emissions)' />
        <param name='target' value='Item share in total production' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_E12BCA66F63B4129993C5A58E4552B48]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total food production by country (all items)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='IN/OUT(Items with known emissions)' />
        <param name='target' value='Total food production by country (all items)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Emission amount: produced vs imported'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3FB3EB60-05A0-4E37-BDBA-5180F80CA1F1}' />
    </worksheet>
    <worksheet name='Emission intensity per product'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median emission intensity per product (sum of all countries)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average of Emissions Intensity Combined In Kg Co2Eq Per Kg for each Item broken down by Item Category. The data is filtered on Area Group, which keeps no. The view is filtered on Item, which keeps 24 of 277 members.


We can already see that non-meat and dairy products produce significantly less emissions than meat products on average. At the same time, products with the highest emission intensity are not always the highest in terms of production volume.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter expression='SUM([emissions_intensity_combined_in_kg_co2eq_per_kg]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' value='268' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk])</rows>
        <cols>([federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk])</cols>
      </table>
      <simple-id uuid='{2080D05D-179A-4E4C-9E74-9F75AB920E6E}' />
    </worksheet>
    <worksheet name='Emission intensity per product (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median emission intensity per product (World)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average of Emissions Intensity Combined In Kg Co2Eq Per Kg for each Item broken down by Item Category. The data is filtered on Area Group, which keeps no. The view is filtered on Item, which keeps 24 of 277 members.


We can already see that non-meat and dairy products produce significantly less emissions than meat products on average. At the same time, products with the highest emission intensity are not always the highest in terms of production volume.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter expression='SUM([emissions_intensity_combined_in_kg_co2eq_per_kg]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk])</rows>
        <cols>([federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk])</cols>
      </table>
      <simple-id uuid='{CB401359-9722-4483-A1A4-8F472898C859}' />
    </worksheet>
    <worksheet name='Emission intensity: produced vs imported'>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column aggregation='Count' caption='Import Year' datatype='datetime' datatype-customized='true' name='[import_year]' role='dimension' type='quantitative' />
            <column caption='Item (Mk Import Emissions)' datatype='string' name='[item (mk_import_emissions)]' role='dimension' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_import_emission_intensity]' derivation='Median' name='[med:total_import_emission_intensity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[item (mk_import_emissions)]' derivation='None' name='[none:item (mk_import_emissions):nk]' pivot='key' type='nominal' />
            <column caption='Total Import Emission Intensity' datatype='real' name='[total_import_emission_intensity]' role='measure' type='quantitative' />
            <column-instance column='[import_year]' derivation='Year' name='[yr:import_year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:total_import_emission_intensity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:total_import_emission_intensity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='member' level='[item]' member='&quot;Meat of goat, fresh or chilled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='member' level='[none:area:nk]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:import_year:ok]'>
            <groupfilter function='member' level='[yr:import_year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:import_year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' value='300' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item (mk_import_emissions):nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{9F713C11-C826-4D89-9664-2ACD253A8944}' />
    </worksheet>
    <worksheet name='Item share in total production'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Products that we have emissions data for account for over 50% of total food production, which is steadily growing over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='Count' name='[cnt:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:3]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:3]' />
              <lod column='[federated.0gmzic2022xdk610vqg5706mizs8].[cnt:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{317F4010-DA5C-4E1B-805B-7EBCCC8EEBCF}' />
    </worksheet>
    <worksheet name='Production over time by item'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Production development over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[item]' member='&quot;Hen eggs in shell, fresh&quot;' />
              <groupfilter function='member' level='[item]' member='&quot;Rice&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' included-values='in-range'>
            <min>#1961-01-01 00:00:00#</min>
            <max>#2021-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{892B4109-29FA-47F3-AF77-4E9E4506AE76}' />
    </worksheet>
    <worksheet name='Production over time total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Production &amp; emissions development over time: emission intensity decreases over time even though production goes up</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Emissions per capita' datatype='real' name='[Calculation_86412862489366529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[emissions_co2eq_in_kt]/[population]' />
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions Co2Eq In Kt' datatype='real' name='[emissions_co2eq_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Emissions Intensity In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_86412862489366529]' derivation='Sum' name='[sum:Calculation_86412862489366529:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Sum' name='[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='level-members' level='[item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' included-values='in-range'>
            <min>#1961-01-01 00:00:00#</min>
            <max>#2021-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' scope='rows' value='Production In Tonnes' />
            <encoding attr='space' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk] + ([federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk] + ([federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[sum:Calculation_86412862489366529:qk])))</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{400F2A74-60B0-46DD-8808-1C1BFB74FE10}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Emissions Ch4 In Kt' datatype='real' name='[emissions_ch4_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions N2O In Kt' datatype='real' name='[emissions_n2o_in_kt]' role='measure' type='quantitative' />
            <column-instance column='[emissions_ch4_in_kt]' derivation='Sum' name='[sum:emissions_ch4_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emissions_n2o_in_kt]' derivation='Sum' name='[sum:emissions_n2o_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_ch4_in_kt:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_n2o_in_kt:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_ch4_in_kt:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_n2o_in_kt:qk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{98B7433A-9455-488C-A193-89493A9C1A1A}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column caption='Item Group' datatype='string' name='[item_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_group]' derivation='None' name='[none:item_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter function='level-members' level='[none:item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='level-members' level='[none:item_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:item_group:nk]' member='&quot;Cereals, primary&quot;' />
              <groupfilter function='member' level='[none:item_group:nk]' member='&quot;Oilcrops Primary&quot;' />
              <groupfilter function='member' level='[none:item_group:nk]' member='&quot;Pulses, Total&quot;' />
              <groupfilter function='member' level='[none:item_group:nk]' member='&quot;Roots and Tubers, Total&quot;' />
              <groupfilter function='member' level='[none:item_group:nk]' member='&quot;Sugar Crops Primary&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{492BACC2-E74D-4DE9-8202-5E2CE00B4C72}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Sum' name='[sum:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter function='member' level='[none:item:nk]' member='&quot;Rice&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</cols>
      </table>
      <simple-id uuid='{F2FBDA0D-4427-4FCE-891D-BEC5AFF04145}' />
    </worksheet>
    <worksheet name='Top-10 countries emissions intensities by item'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission intensity &amp; food item
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Avg' name='[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Livestock primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / ([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]))</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</cols>
      </table>
      <simple-id uuid='{E94A198D-92E8-44CB-9200-B4832DCE78B8}' />
    </worksheet>
    <worksheet name='Top-10 countries emissions intensity '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by median emission intensity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Avg' name='[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='level-members' level='[item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belgium-Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bolivia (Plurinational State of)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Czechoslovakia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Democratic Republic of the Congo&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ethiopia PDR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Netherlands (Kingdom of the)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Palestine&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Republic of Moldova&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Serbia and Montenegro&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sudan (former)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Türkiye&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Republic of Tanzania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United States of America&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;USSR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Yugoslav SFR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</cols>
      </table>
      <simple-id uuid='{B55BD696-0D7A-43E3-BB99-20199E42E27D}' />
    </worksheet>
    <worksheet name='Top-10 countries production'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 producers by food item</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:6]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[item]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='level-members' level='[none:item_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:6]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:6]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / ([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]))</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{2C38DCF4-784E-42D9-AB49-F942067686DD}' />
    </worksheet>
    <worksheet name='Top-10 countries production per capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food production per capita, top-10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Production in T per capita' datatype='real' name='[Calculation_590816019423174656]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([production_in_t])/SUM([population])' />
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_590816019423174656]' derivation='User' name='[usr:Calculation_590816019423174656:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_590816019423174656]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_590816019423174656:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#d4d4d4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_590816019423174656:qk]</cols>
      </table>
      <simple-id uuid='{E901004B-5919-435A-A5AF-B13E008462BD}' />
    </worksheet>
    <worksheet name='Top-10 countries production per capita (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total emissions, top-10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='level-members' level='[none:area:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:1]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#d4d4d4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]</cols>
      </table>
      <simple-id uuid='{AECB200E-E6D9-40F3-AD9E-0F5B82BF4E05}' />
    </worksheet>
    <worksheet name='Top-10 emission amount crops'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission amount  - Crops </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Avg' name='[avg:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Crops, primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:year:ok]' member='2015' />
              <groupfilter function='member' level='[yr:year:ok]' member='2016' />
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_calc_in_kt:qk]</cols>
      </table>
      <simple-id uuid='{0D020314-3BF7-4412-83B0-CC14A387BE3E}' />
    </worksheet>
    <worksheet name='Top-10 emission amount livestock'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission amount  - Livestock </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_co2eq_in_kt]' derivation='Avg' name='[avg:emissions_co2eq_in_kt:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions Co2Eq In Kt' datatype='real' name='[emissions_co2eq_in_kt]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Livestock primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:year:ok]' member='2015' />
              <groupfilter function='member' level='[yr:year:ok]' member='2016' />
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]</cols>
      </table>
      <simple-id uuid='{9C9E3EFC-C2F2-4755-A391-061C63FC6593}' />
    </worksheet>
    <worksheet name='Total food production by category'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total food production by item category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[io:Items with known emissions:nk]' member='false' />
              <groupfilter function='member' level='[io:Items with known emissions:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='level-members' level='[none:item_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{FC3CD3C8-3D46-4449-A3A0-E1CC3B845F6E}' />
    </worksheet>
    <worksheet name='Total food production by country (all items)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total food production: selected items vs the rest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]'>
            <groupfilter function='level-members' level='[io:Items with known emissions:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='n#,##0,,,B;-#,##0,,,B' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#d4d4d4' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' value='Selected crops &amp; livestock items&#10;'>
              <formatted-text>
                <run>Selected crops &amp; livestock items
</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' />
            </encodings>
            <reference-line axis-column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' enable-instant-analytics='true' formula='total' id='refline0' label-type='value' scope='per-cell' value-column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{20696BDC-4810-4BFC-AD40-96851567366B}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Production over time total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='1' param='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6130DFE0-3AD9-4137-88A2-7AA80B6A9428}' />
    </window>
    <window class='worksheet' name='Production over time by item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B4CA8345-ACFA-47FC-874E-239C53BAC86E}' />
    </window>
    <window class='worksheet' name='Total food production by country (all items)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C2CBCA26-64A1-498E-8208-9E67829C4741}' />
    </window>
    <window class='worksheet' name='Top-10 countries production per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2601A682-05DE-442F-AAB6-5F6C731D6430}' />
    </window>
    <window class='worksheet' name='Top-10 countries production per capita (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC6E5F56-A121-49B1-BE25-FDE3A685273D}' />
    </window>
    <window class='worksheet' name='Total food production by category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E1E4108-D088-45E3-BC30-2819433CDA16}' />
    </window>
    <window class='worksheet' name='Item share in total production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{86E929C9-F9B9-4FFE-BD23-B286BA3A67D9}' />
    </window>
    <window class='worksheet' name='Emission intensity per product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='3' param='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3A056D5F-B7BD-4D77-82C3-4907A907D813}' />
    </window>
    <window class='worksheet' name='Emission intensity per product (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{389CD4EB-CB1E-4141-A749-B471118BB506}' />
    </window>
    <window class='worksheet' name='Top-10 countries emissions intensity '>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
            <card mode='radiolist' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{793A9ABC-25FE-42CC-AB7A-43E4A5544474}' />
    </window>
    <window class='worksheet' name='Top-10 countries emissions intensities by item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D2F9C309-8EE4-4142-A837-41BE30867065}' />
    </window>
    <window class='worksheet' name='Top-10 countries production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1592F97E-2E72-4324-AF69-2981F5E18518}' />
    </window>
    <window class='worksheet' name='Top-10 emission amount crops'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA58A4B9-E106-450E-A37E-DCB1C0893A92}' />
    </window>
    <window class='worksheet' name='Top-10 emission amount livestock'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F73BAEF5-E367-4A05-A832-F63876D710AF}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C98175C3-1728-49D5-9936-45F8DFB2E6EA}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_group:nk]' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_group:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11BA6139-6772-4053-978C-39D2C62967D7}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0BD8AA0-7290-4B5D-92B3-95456ABF5E5B}' />
    </window>
    <window class='worksheet' name='Emission intensity: produced vs imported'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:import_year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item (mk_import_emissions):nk]</field>
            <field>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:import_year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F4B761D-922E-457C-942C-18E7DE2483D5}' />
    </window>
    <window class='worksheet' maximized='true' name='Emission amount: produced vs imported'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B5D3F1C3-83F7-4D91-B09E-8E98FB0B14E9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Emission amount: produced vs imported' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Emission intensity per product' width='384'>
      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
      8bX+wB85AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Emission intensity per product (2)' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='238' name='Emission intensity: produced vs imported' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAADuCAYAAAAwTtAhAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWGElEQVR4nO3dZ6xsVRmH8ecKKkVFBJVmVIogiEgxoPTQpRhAAUUBC4YgNVEhKMUCIRgC
      +oESDAGRoEiCRClCBGmKeCkKAopIURFQECkCol4/mH9WZt8z58ypc859n9+Xm3tmz8yevffM
      u9613rX2vAULFixAklTOK4a9A5Kk4TAASFJRBgBJKsoAIElFGQAkqSgDgCQVZQCQpKIMAJJU
      lAFAkooyAEhSUQYASSrKACBJRRkAJKkoA4AkFWUAkKSiDACSVJQBQJKKMgBIUlEGAEkqygAg
      SUUZACSpKAOAJBVlAJCkogwAklSUAUCSijIASFJRBgBJKsoAIElFGQAkqSgDgCQVZQCQpKIM
      AJJUlAFAkooyAEhSUQYASSrKACBJRRkAJKkoA4AkFWUAkKSiDACSVJQBQJKKMgBIUlEGAEkq
      ygAgSUUZACSpKAOAJBVlAJCkogwAklSUAUCSijIASFJRBgBJKsoAIElFGQAkqSgDgCQVZQCQ
      pKIWn+wLzJ8/fyr2Q5I0w8wAJKmoeQsWLFgw7J2QJM08MwBJKsoAIElFGQAkqSgDgCQVZQCQ
      pKImPQ9Aw/HQQw8B8Nvf/haAN7/5zQC85z3vGdYuSZpjzAAkqaihZQCnnHIKAI8++mjP/1/1
      qleNuP0zzzwDwDHHHAPAWmutBcAhhxwyrfvZz1NPPQXAX//6VwDWXHPNGXnfP/7xjwCcc845
      AOy8884AvP71r5+R959uwzqumpg//elPAMybNw+AlVdeGYBML/r3v/8NwCtf+coh7N3c8d//
      /hdox22xxRabkfc1A5CkooaWASTSrbPOOgDcfffdAGywwQYjbn/nnXcCsN566wHwwgsvTPcu
      jurxxx8H4I477gBmrqX6+9//HoD3ve99ALz//e+fkfedKcM6rrPNXMmQf/e73wELZwDPPvss
      AMceeywA3/jGN6Z1P8br6aefBtr+Lb/88qNuf+SRRwLwute9blr25/rrrwfgkUceAWD//fef
      lvfpMgOQpKKGXgW00UYbAW1V0X4ZwG233QbAVlttBcCNN9444nbXXXcdANdccw0A//nPfwDY
      csstAfjABz7Qs/19990HwOWXXw7AE088AcBSSy0FwK677tqzX7/85S97tn/uueeA1hcaaTH0
      6/tMy+6CCy4AWp93qnn222+/nv9fdtllAPziF7/oeZ177rkHaC3lD37wgyO+XzKuq6++GoCf
      //znALz88ssAvOUtbwFgk002AVo10b/+9S8ALrroIgB+85vfAPDqV78aaGMQeV4M67guKuZ6
      hpyW8mmnnTbU/RjLKqusAsBRRx011P3I79pMMwOQpKKGngG8/e1vB1oLNy3StPCef/55oLVo
      VlhhhRFf5/777wdaZnDwwQcDrc/0W9/6Vs/7vfOd7wTa6Puee+4JtBZB+trPPvtsoLXE0jLO
      89IC33333Xv2Z/HFRz60ed6ZZ54JwD777NPz+r/61a8AOOusswA47rjjANhuu+2AVh3wilf8
      P3ZnDKBf33D89Kc/BVoL/vDDDwdgmWWWAeCSSy4BWss7cl7y+ieffDLQ+lBPP/10oB23/DvT
      x3VRNewMOZnItddeC8BNN90EwEsvvQS087H11luP+H7nnnsuAJ/+9Kd7/n7FFVf0fK5cdxlD
      2HfffYGF++Zz3eR7fMsttwDw4osvArD99tsD09+izvfzjW98I9AysHxPsh/JhO+9916gfZ5P
      fepTACy77LJA+/3KGNjmm2/e834/+9nPgHZe//GPfwCwxhprAO145f0H3d4MQJKKGnpzKtUD
      6667LgB33XUX0Fo6iazrr7/+qK+TPuRE/rQ4Y7PNNut5vWQAa6+9ds92yUDSEsm/Tz75JAAr
      rbQS0Po40xc+aB1+WsDZv7SAI324N9xwAwAPP/wwAG9729sAWHLJJYGWCQz6vjfffDMAn/3s
      Z4HW8ohkAl2pxjn++OOBlnm84Q1vAGDHHXcE2thEPtdMH9dF1bAz5LSwk2EceuihQDsvl156
      6aj7nxnrXa997WsBOOywwwBYYoklALjqqquAlpEedNBBI36OXD9HHHEE0DKVZKhpQY9VT595
      Cpl/0k+u93jggQeAdp1/6UtfAtrv13e/+12gtbTzbzKfW2+9FYAddtgBaFVT+T7E3//+dwCu
      vPJKoH3eHL9kUPkcuR4G3d4MQJKKGnoGEOnrTJVKMoDbb78daH3liVxdieB/+ctfgNb3Fulj
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Item share in total production' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXAcV34n+G9edd9VuE8CFO9DF+WWLImtaU23V2Nbssf27o7H216Hujfs
      WG+EI2bD4bC94/F6PREbMftPh2N2vXaf494jfEmWZlsRdrcodotkiy1KlCge4IX7rEJdqCuP
      t38UUARYWYWiRAAF5PfzF4j88eUrEHy/zF++fE8SQggQEZHjyDvdASIi2hlMAEREDsUEQETk
      UEwAREQOxQRARORQTABERA7FBEBEtI4QAl/72tdw6dIl3LhxA1/72td2uktbRuJ7AEREG6XT
      afzJn/wJQqEQfvu3fxuXLl3C66+/jv7+fvzO7/wO/viP/xjZbBavvvoq/v7v/x7JZBK/93u/
      h46Ojp3u+gPhHQAR0X3C4TAOHz6Mrq4uhMNhvPHGG3j22Wfx8ccfwzAMnDp1CtFoFO+99x7u
      3LmzKwd/gAmAiKiOJEkYHh7G0NAQJElCMBhEZ2cnvvrVr2J8fBxjY2P4whe+AMuy0N/fvysH
      fwBQd7oDRETtaN++fbAsC5Ik4bd+67fwN3/zN4hGo3jqqacQDAYxPT2Nxx57DCMjIzvd1U+N
      zwCIiByKJSAiIofalQlACAFd13e6G0REu9quTABERPTZMQEQETkUEwARkUMxARARORQTABGR
      QzEBEBE5FBMAEZFDMQEQETkUEwARkUMxARAROdSOrgYqhMDY2Bg8Hg8GBwchhMCtW7egqioG
      Bwdx9uxZWJaFwcFBjI6O7mRXiYj2nB29A0ilUigUCpidnQUAFItF3LhxA5OTk7AsC5Zl4fTp
      07hy5cpOdpOIaE/a0TuAeDwOt9uNK1euQAiBd999F8888ww++ugjAMDt27cxPj6O7u5uAIBp
      mrAsC0KI2tdERPTptM2GMOl0GlNTUzAMA1NTU7WNFp5//nm89tpr0HUdmqZBURQIISBJEjRN
      2+luExHtWjuaAGZmZnDlyhXMzMygp6cHv/7rv45SqYT33nsPHo8HExMTeOedd6CqKlS1bXIV
      EdGesCt3BBNCwDAM3gEQEX0GnAZKRORQTABERA7FBEBE5FBMAEREDsUEQETkUEwAREQOxQRA
      RORQTABERA7FBEBE5FBMAEREDsUEQETkUEwAREQOxQRARORQTABERA7FBEBE5FBMAEREDsUE
      QETkUEwAREQOxQRARORQTABERA7FBEBE5FDqTp5cCIGxsTF4PB709/fj4sWLyOVyGBoawsjI
      CM6ePQvLsjA4OIjR0dGd7CoR0Z6zo3cAqVQKhUIBs7OzkCQJx44dwwsvvIBr167BsixYloXT
      p0/jypUrO9lNIqI9aUfvAOLxONxuN65cuQJJkrC0tIS33noLp06dAgDcvn0b4+Pj6O7uBgCY
      pgnLsiCEqH1NRESfzo4mgPsNDg7iy1/+Mt58800cO3YMIyMjeP755/Haa69B13VomgZFUSCE
      gCRJ0DRtp7tMRLRr7WgCmJmZwZUrVzAzM4OOjg5cv34dfr8fQggAwMTEBN555x2oqgpVbatc
      RUS060libbRtA5ZloVwuw+v1No0TQsAwDN4BEBF9Bm01DVSW5U0HfyIiejjaKgEQEdH2YQIg
      InIoJgAiIodiAiAicigmACIih2ICICJyKCYAIiKHYgIgInIoJgAiIodiAiAicigmACIih2IC
      ICJyKCYAIiKHYgIgInIoJgAiIodiAiAicigmACIih2ICICJyKCYAIiKHYgIgInIodSdPLoTA
      2NgYPB4PBgYGcP36dUxMTGBwcBAHDhzA2bNnYVkWBgcHMTo6upNdJSLac3b0DiCVSqFQKGB2
      dhZCCIRCIbz44osYGxuDZVmwLAunT5/GlStXdrKbRER70o7eAcTjcbjdbly5cgWyLKOnpwfn
      zp1Dd3c3AOD27dsYHx+v/dk0TViWBSFE7WsiIvp0djQBrCeEwLvvvotYLIbDhw/DMAyMjIzg
      +eefx2uvvQZd16FpGhRFgRACkiRB07Sd7jYR0a61owlgZmYGV65cwczMDDo7O3H16lWMjo5i
      eXkZTz31FCYmJvDOO+9AVVWoatvkKiKiPUESQoid7sSDEkLAMAzeARARfQacBkpE5FBMAERE
      DsUEQETkUEwAREQOxQRARORQTABERA7FBEBE5FBMAEREDsUEQETkUEwAREQOxQRARORQTABE
      RA7FBEBE5FBMAEREDsUEQETkUEwAREQOxQRARORQTABERA7FBEBE5FBMAEREDrXjCUAIAcuy
      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
    </thumbnail>
    <thumbnail height='384' name='Production over time by item' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Production over time total' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeWyc933v+/fzPLPPcBZyuIuLRImiNtuyHCmxY9PZ7Fh1UnRJTpukyOlF
      e1H0XgToTYGiOKf3nwIFmluc4h4kDYqgOD3n3osmzUmbnJ44cRMnsitLsmXtpiRKlLhvMyRn
      X5/t/vFQY8uSrZGlEUnx+wIEkg+fmfmNbP0+89sV27ZthBBCbDrqWhdACCHE2pAAEEKITUoC
      QAghNinXu3+wbZv5+fm1KkvdbNsmn8/T1NS01kURQogNS9mIg8CWZbG4uEhnZ+daF0UIITYs
      6QISQohNSgJACCE2KQkAIYTYpFx3vqVxTNPk6NGjGIbBnj17iMfjHDt2DI/Hw6FDh5icnGRs
      bIx9+/bR3t6+lkUVQoiHzpoOAluWRaVSwe1286//+q+0t7fT2dlJNpsFYHx8nOeee46XX36Z
      w4cP3/S4jTwIbNs2i/kchmWxJRJd6+IIITapNW0BKIrC9evXefXVV3nxxRcZHR3lwIEDRKNR
      Tp48id/vR1VVPB4P4LQYLMvCsixM06RSqaxl8e+aDSzm8xyZvMbFxCIK8JEtvXxm2w68mrbW
      xRNCbDJrHgB79uyhr6+PV199lWAwSKVSoVAo4PP5yOfz2LaNZVkAaJqGpmlYloWmaXi93oaU
      y7ZtRpcSvD45TnuoidZgiNZgiK5wGJ/L/aGeby6X4edjV7iYWMSruXh263bcmsrPxq4wmU7x
      lccO0BaSdQ1CiAdnTQMglUpx8uRJXC4XHo+HPXv28NJLL2GaJs8//zzHjh3jtddew+/3P9By
      KYqCz+WmqOu8OT1FxTRqv/O73bQFQ3Q2hYn5A7SFQjR5vLSGQreEw+0q/k9s287T/dsIerzY
      tk1vNMb3L5zjWyeO8itDezi4pfeO5bNtm6VigUQ+j1tT0VQVt6rhVlV8bjduVcO1+r0QQryf
      NV8IZpomuq7j8/kA0HUdRVFwuVzYtk2lUqn97oYHOQZg2zbZSplkIc9cNkuykCdRyDOfzd4U
      DAB+l5tYwE/MHyDmC7BSKjgVv8vFM/0DfLx/621bEJlyiX84d5qJ1AoHe/o4vHM3Ptet2Vw2
      dEaTCc7MzXIpuVhX+f0uNz63iyavD7/Lhd/tIeTx0uT11kLCrWr43a53BYmGz+0i4PbgvU05
      hBAPhzUPgA9jPQwC27ZNydBJFYuslEqkSkVSpSLJQoFspcxysYDX5eLJ3q3vW/G/m2lZ/OL6
      VX4+doWOUBNfXu0SqhoGU5k0b85McjmxSMU0iQeCPNbVzc54G7ZtY9gWumliWBZlw6h9X9J1
      yoZOSdfJVSqU9Cr5apVcpYxZx392TVE50L2FT2zbTnMgeL/+6oQQ60TdAZDL5fizP/szurq6
      mJqaorOzk69//eu3fDp/ENZDADSCbdtcXU7y/QtnqZomj3R0Mba8xEqpiFdz8VhXN491drGt
      OX7Pr1U1DQzLomIYVE2Tsq7XgqSk6xiWxWI+xxvTk5i2zf7Obj7ev43OpvB9eKdCiPWg7gCY
      mZnh+PHj/OZv/ibf+ta3eOSRR2hpaWHPnj2NLuMtHtYAuCFTLvH9C+eYTK+wvaWVA91b2N7S
      ettuoUYr6lWOTY5zdHKcsmGwr72DTw4MShAI8RCoOwBs2+Y73/kO6XSa7du309nZye7du4lE
      Io0u4y0e9gAA5+/btC1c6vqYHvreIBiKt/FkXz/d4QhBT2NmYwkhGquuAJiammJhYYGDBw9i
      mibf/e53+cIXvlCbn/+gbYYAWK9Kus4b05McnbhOruqsw3CrGi5NJez1EfR48GgaIY+XsNdH
      yOsMODf7A8T8fgkLIdaRugLAsiz++Z//mfHxcbLZLJ/73Of4yEc+8iDK977lkQBYWyVd5+pS
      kqVigbKho5smuUqFgl6lYhjkqxXylcotg83OjCM3Ub+fmM9PTzRKZ1OEnkhUZhwJ8YDV9S8u
      nU7jcrnIZDJ0dXUxPz+PYRi45B/spuV3u3mks+sD77Fsm7Kus1IqkqtUSJWKpMslCtUqS8UC
      U5k05xbmAFCAlkCQ7nCE3miM7kiErqaIhIIQDVTXvy6fz8f27dvZvn177Zqqykai4oOpikLA
      4yHwAV2FJb3KTCbDbDbDVDrFbC5zUyh4XW68mkbQ611dx+DG53LT5PXic7lpDYbY2txMwL02
      3ZFCbGSyDkCsK5ZtU6xWmcmmmUqnVtcyGJR0nZKhU179+u7uJQWI+Pz0xWL0RGJ0NYXpiUTx
      SOtBiA9UdwCkUil+8pOf8KUvfanRZbojCQABUDEMFnJZxlMrzOUyzGYyLBULAGiKQkdTGK/L
      hc/lwudy11oPLlV1xiF8fpq8XrrCEVRFWeN3I8SDV/dHJK/Xy4kTJ6hWqwSDQX7t135NxgDE
      mvK6XPTFmumLNdeuFfUqs5kME+kVJlIrWKv7JummSVk3KBn6Lc+jKSrxYIC2YBOd4TCdTWF6
      IzFCDdpsUIj1ou4WgGEYzM7OYpommqbR09OzZuMA0gIQ96K8utI5V3UGpqczaeayGaYzaQrV
      au0+r8uFwq0tg/JqiGiKypZIhMF4G33RGL3RKN4PsVusEGul7gAoFov89V//NS6Xi7a2Nr78
      5S/LOgDx0CnrOvP5LAu5LEuFwm3v8brcKAoYlsW15SVmMmlsnEDoaGpia3ML/dEYW5tbCMm6
      B7GO1d2Hk0gkeOyxxygUCqysrFCtVtcsAIRoFJ/bzdZYC1tjLXU/xrBMxpaXmEylmMqknBXT
      E9drv/e6XLhVFbem4XW5a99HfD7agk3saInTHYnKOIR44O5qK4h//Md/5PLlyxw4cIAXX3yx
      0WV7X9ICEOuZYZlMZ9JMp9NUTKPW5aRb1ur3Jrplka9USBby2EDQ42F7S5yh1nZ2xltlxbR4
      IOpeCfzNb36TXC7H7/3e7635Ae0SAOJhkS6VGE8tM5pMMLqUpKg7YxAtgQCD8TYiXh9uTXPO
      atA0XIrz1edygQIdoTBBaYmLD6muALh69SoXL17kE5/4BN/73vf4/d///QdRtvclASAeVkuF
      AhcTC1xbWeL6yjJV07zjY4IeDz2RKH3RZlqDIXqjUSK+B3uKntiY6hoDKBaLnDhxgoWFBU6e
      PAnA7/7u78o0UCHus3gwyDNbB3hm6wDgdCfppoVhWRiWc9CPbpqUDR0bWMjlmEqnSORzvHz1
      cu15fC4XWyJRBprj7G5rpz3UhCJjDOI96moB6LpOOp2+6Vo8Hl+z/6GkBSDErQzTZD6XZSqT
      JpHPMZ1JM5vNAM4+S3vaOtjZ2sq25rgMOAtAtoIQ4qG2VMhzbWWZ6yvLnJufdaarqir72jsZ
      am1jT1uHbJmxidUdAOVymb/7u7/DsizngYrCr//6r9PV9cE7QjaCBIAQd88wTa4sJzk/P8fo
      UoKirhP0eDi0pY9DPX1E/TJusNnUHQALCwscP36cz372s/zTP/0Thw8fJhKJrMlqYAkAIe6N
      YZrM53O8Pnmds3OzqKrK/s5uPrFtO/FgaK2LJx6Qutt+kUiEt956C9M0OX/+PL/5m78pW0IL
      sUG5NI2eSJTfeuRxPjUwyCvXrnBufo63ZqfZ297BR3v62d6yduN84sGoex2AbdsYhsHMzAxt
      bW2EQiEZBBbiIZIulTg1O80b05NkKmU6Qk082tlNWyjEtljLB57rIDamugLg3LlzLC8vUygU
      eOSRR/jJT37Cv//3/x6fz/cgyngLCQAhGscwTU7Pz/DWzDST6VTtus/lorMpTGdThK5wmK5w
      hK6msLQSNrC6u4AMw8AwDHRdx6xjcYoQYmNyaRoHt/RxcEsfhmkyl8synUmRyOeZy2U5MzfD
      sanVHVFVldZgkN5IrBYIraGQnNC2QdQVAPF4nJdffhlwVgUrioKmaQ0tmBBi7bk0jd5ojN5o
      7KbrqVKRuawTDHPZDBcW53lzZsp5jKoS9fnpCocZjLexrbmFlkBwLYov7qCuAOjs7GT37t30
      9PTwyCOPcOrUKWn2CbGJxfwBYv4Ae9o7atdylQpTaWdH1GQ+z9WlJc4vzAMQDwTZ2dpGbyTG
      YGvrmrcQdNNkdClBulRiW3MLXeHImpZnrdQVAGfPnmVlZYXr16/j9Xp566232Lt3r2wFIYSo
      afJ62dPecVMoJAt5RpMJpjIpTs/O8PrkOK7VbqPdbZ20hUK4VWdzO5em4ne5a5vd+Vzu+/5B
      UzdNTkxPcnTiOulyqXbdpar0RmPsjLc5J8JFY/jdD//hPnXV4JFIBK/Xyx/8wR/wjW98g1Qq
      decHCSE2vdZgiNbVdQX66lYVFxMLjCYTvHLtyh0ff6MrqTcaq40z3G3FbNs2qVKJo5PXOTU7
      Tdkw2Nbcwud37aWzKcxcLsP11dXSP7lyCXACIeYPsDPeSufq2Mb9bCXYtk2ikKdYrbK1uf6z
      J+63umYB2bbN2NgYO3bsoFKpcPToUYaHh9esBSCzgITY+HTTJF0qUTJ0dMvEMC1KhnN2QlnX
      KRk6yXyeRCHPfC4L3KiY/WxrjjsDzsHQ+7YcbNsmWcjzs7ErnF+Yw6WqPNrZxUd7+m8Z03h3
      mabSKUaXEs6+SukUZcOovfaNVkJrMMS25pa7DqOqaXJteYkT0xNcTiYAeLxrC7+6ay++NWhx
      1L0SWNd1/vqv/xpVVXG73Xzta1+TdQBCiAeipOtMpVNcX1kmUchzfWWpVjHfjktVcakqZcPA
      pap8tKePp/q30ewP3NXr3giRyXSK6UyKyXSKhVyu9vu2YIjBeBu90RiD8db3DYSqafDWzDSv
      T46zVCzQ7A/w8f5t6KbJT65cIh4I8jv7n6CjKXxX5btXdQfAtWvXGB0d5YUXXuB73/sen/70
      p4nH440u321JAAghUqUiK6XibVsOhulsnd0aDPFoZ/d97c/XTZO5bIapTIqpdIorS8la0LSF
      Quxp62RbcwvbmluomgYnpiY5OnmdTLlMe6iJT28fZHdrOy5Nw7ZtxlMrfPf8aUq6zuGdu/lY
      b/99K+ud3FUL4D//5/+MZVkEAgH+8A//UFoAQohNTzdNEvkcI4kFrq8sM55aAW5uhQy1tvHR
      nn52td3+NMV8tcI/nDvN2PISB7q28PkH1CVUVwBks1nm5uYYGhrCtm1OnTrFgQMHJACEEOI9
      qqbBlaUkU+kUVdPkUE8fnXV07Vi2zWvj1/jXsVFiPj9f2PcY/bHmhpa1rlHcS5cuUalUGBoa
      AuDMmTMMDg4SDj/Y/iohhFjvPJqLve2d7G2/uw+oqqIwvHWA3miU754/w9++eYzhrdvpiURp
      9vuJ+QP3vVVQVwAMDQ3xl3/5l/h8PgqFAjMzMzQ1Nd3zi1uWxZkzZ1haWmLv3r20t7dz7Ngx
      PB4Phw4dYnJykrGxMfbt27fmB9ELIUSjKYrCtuY4X//4J/inkfP88vrVm37vd7lpDQZp8vlo
      C4boCkfYFmsh5PV+uNerdwwgk8lw/PhxvF4vTz31FJ77sDOgaZokEgna2tr46U9/SkdHB52d
      nWSzzpSv8fFxnnvuOV5++WUOHz5ce5x0AQkhHna2bTtTYQt5suUKyUKefLWy+nOZZLGAaVm4
      NY2d8TYe6+xi1+rgcr3W/EhI0zT52c9+xsDAABMTE3zmM5+hWCxy8uRJbNtmeHiYV155hU9/
      +tOYpollWViWRTKZpLW1dS2LLoQQD1xRL1LSCxT1IqPJaY5NXSVdymJaJVyqSW/Ej6pYLBWS
      lKpFAh5nHya35sGtOV1IChDwBOvfDbRSqfCjH/2IG3mxbds2PvKRj9zTG7Esi5dffpn9+/fT
      2dnJ7OwslUqFQqGAz+cjn89j23btGEpN09A0Dcuy0DQN74ds9gghxHpk2zaJ/CJjyVGuLV0l
      XUqRLCQpVgsUqnmy5cwHPj7oCTK25KdiWmhqAEXxkzec+tOy82A7OznbAPZc/QGQyWQol8s8
      88wz/PCHPySTydDe3k5vb++HfrOlUompqSn8fj+JRII9e/bw0ksvYZomzz//PMeOHeO1117D
      L2eVCiEeMu9U9leYTI0zlhxlMjVBSS8C4NE8dIa7ifqjtIXaCHiCBD0hIv4oAXeQoCdI1B9b
      vR4k4o8CUDEMRhILjCzOM55aoVCtvm8Z6u4CyuVyfOMb3+Azn/kMv/zlL/nYxz7GwMAAAwMD
      9+Gv4h26rqMoCi6XC9u2qVQqtxw8I2MAQoiNyrZtZtJT/D8n/463F84DTmXf17yV7fGd9DVv
      pb95K72x/vv2emXDQDdNyoZOSdfRLYuyodcXAOVyGY/Hw8rKClevXqW3txefz0csFpND4YUQ
      og5OxT/N/3j7B7w+/irNgRZe3PNrqxX/Dtzag98iu64uoHQ6zd/+7d/y1a9+Fdu2+c53vsN/
      /I//UQ6FF0KIOlSMCkeu/px/PPv/YVoGzw39Cl987Eu1Adq1UncXUKlU4i//8i/p6+vjq1/9
      6ppW/tICEEJsBBWjwrHx1/in899jubDMU1uf4d89/hXiwfUxg7GuAJiZmeG//bf/RqlUwu12
      43a7+eM//mPca3RgggSAEGKt2ba9OjunQEkvUjUrZEoZqmYV3axSqBY4OXWc0cQltkR7+Z0n
      /hf2dT221sW+yZqvA/gwJACEEB9G1agymRrn4sLbXFp8m2K1wKPdj7OrfS+7O/be8fEVo8K5
      2dOcmn6Tc3On7zgtc0ukh8/v+w0+vu3Z+/MG7jM501EIseGkSynGkldIl1K0htqI+KNEfTEi
      /uhNm1Tats1SIcHFhbe5uPg2p6beoKgXcWtu+mJbcWtufnDuu4CzUOrRrv1sb93Jo1376Wve
      6pwHkE9wfOLfODd7msuJiwBE/TEGW3exq2NPbUqmW/MQ9Udxa27cmqc2PXM9q7sFkEgk+Iu/
      +As6OztRFIU/+qM/ki4gIcQDUTWrjCWvcH7uNBcX3mZs6fbHSbpVNwFPkNbVefPpUoqp1AQA
      8WAbuzv2srt9Lwd6D9Uq56pR5dzcaS6thsSN+yM+pzJfKiQB6Ips4YmeQ6sthj0Nf88PQt0B
      kEql+NnPfsYXv/jFRpfpjiQAhHj4zWVmeGv6Tc7NnmZyZZyiXsCtutneOljrsukKb2EuO0ux
      WlhdNZugWCk4X6sF51N9934e6Xqc/uatd3xN27aZy84ylhzl3NwZFBQe7d7Po12P1xZaPUzu
      aiHY3/zN36BpGoqi8LWvfU1aAEKI+6pqVrm0MMIrV37KW9Nv4FbdxENtPNFziF0de9kRHyTo
      Da11MR8adY0BFAoFJiYmbtqRU7uLHeeEEOKDVM0q/3btl/zk0r8wl5khHmzl3+3/Cs8MfJJY
      oLGHomxmdQVAuVzm2rVrN13btWuXLAQT4iFWqBbQzSqZUhrdrJJe/VqoFijqBdKlNOD0u3tc
      t65idalugp4g8VCbs1eNL0prqO2mQdpkPsGJiaP85NK/kC6l6Ax38b89/X/wZP/Ta3bi4GYi
      00CF2KSK1QLJfIL57CzpUopEPkGmlGYuM0OmnCZdSn3g4wPuACgKullFN/W6XzfgDhDxxwh6
      gkymJsC2GWrfw288+lvsaN0pFf8DVPc00Hw+z/nz5zl06JB0/wixgS0Vkvzw/Pd5c/IY+Wq+
      dj3gDhD2O5/SB+I7aA21EfSECHiCBDzB1SmOntq0x9t96n+3G62FpXyCQtVpMSwVnO8zpRTp
      UppP7niOF3a9SFtTR6PftriNugPA7/djGAbf/OY38Xq9HD58+J62ghZCPFjFapGXLv6IH1/8
      IaZl8dS2Z3h8y0doDbYRD7US8t77Ma/v5syL9xD1x+7r84r7p+4AsCyLVCpFLpejo6ODH//4
      x7zwwgv09/c3sHhCiHulmzpHrv6c/37uHyjpRZ7aNsyv7v0NOsJda100scbqDoBSqURrayv/
      4T/8B4rFovTTCbFGFrLzvHz5f3J29hQezUssEKMj3E1bqJ3OcBdRf4yuyBZUReX18Vf5Hxd+
      wFIhyf4tT/Abj/4WPdE++fcrgDoDwLZtisUiiUQC27b5+7//e377t3+b5maZniXEg6CbOmdm
      3uK1a7/gzOxbaIrG3s5HcalulgoJri2NUXhXfz44s3N0S2dr8wD/5/N/wUB8h1T84iZ1B8B3
      vvMd5ufnuXbtGlu2bCEWk349IRptubDEiYnX+enl/8lyIUl7Uwef3/MbfGrn87dsKVysFpjP
      zpHILzKfmaViVtjZuovHthxAVWTKtrhVXdNAM5kMhmGwsLBQO5+3v79/zdYByDRQ8TDTTZ3R
      xCVeu/YLjo2/hqqo7GzbzScHn+NQ75Oy/kbcN3WfCKbrOhcvXqxd6+3tlf8RhbiPdFPn1bFX
      +NmVnzCdmqQ50MLzQy/yqcHn6Yp0r3XxxEOorgDo6+ujWq2SSqXIZrNcuXJF1gKITWsxt8CP
      R37I5cWLlI0yAU8At+bGo3lxaS68mhe/O4DfE6At1E5vrI/eWD9hX+S2z7eQnedfL/+Y18df
      I1fJ0h3p4Q+e+hoHez+Gz+1/wO9ObCZ1zwKan58nkUhw7do1Ojs7WV5eJh6PN7JsQqwbuqlz
      JXmZX1z5V96YfB1VUdnT8QgRf5RitYBu6lTNKuVqiayZoVgtUNSLNw3Mhr1hOiNb6I31sSXS
      QzTQzPGJo7w5eQxVUXly69M8u/3TDLbtkj578UDUHQDd3d388z//M08++SSJREIGgcWmUNKL
      HBv/N3566V+YzczQHGjhuaHDfHboc7Q1td/x8ZlShvnsDFOpSWbS08xlZzgx8Tq5Shag1s3z
      2V0v0hpqa/TbEeImd3UiWEdHB2+//TaKorABtxAS4o50UydbTjO2dJULc2d5a/oNsuUMO+I7
      +V+f/N/5+LZncan1/7OJ+CNE/BGG3nOASKaUoVDN0RHukk/7Ys3U/X/y9PQ05XKZz33uc4Bs
      By02vmK1yEx6iomV68xmppnPzjG5Ml77dO5SXXy0/ykO7/5V+mJb7+sc+hvBIMRaqjsA4vE4
      p0+fxrIsFEXhd37nd3C55EhhsbGsFJZ5c+oYJ6dOcH15jIpRAaDJG6Yz3MVH+5+ir3kbO+KD
      tIba8bl9a1xiIRqn7u2gb+wFVCgU8Hg8tLe3r9mqQlkHIO5GIrfAqek3OT5xlOvLY6iKSksw
      zqG+J9nWsp3OcDfdkS2oqrRqxeZS90f4YrHIt771LQKBAPF4nN/+7d/G6/U2smxC3JWKUSZf
      ya/ubb/IlcQlzs+dZSE7h6ZqbG0Z4MsHfpcDPQfrGsAV4mFXdwCsrKywZ88eDMNgcXERwzAk
      AERDWLbF+PI1Tk2/Sdko3/L7ilHGtEws2yJfybFcWCJVWiFfyd10n9/tp795Gy/s+hyPdj8u
      s2yEeI+6A6Cnp4cLFy5w4cIFDh06RDAYbGS5xCZUrBY5P3eGn4/+hIuLb+PRPLg09y33eTQv
      LtWF1+XFrbmJh1rZHh+kI9xFyBsi6o/RurozpibdOkK8r7tqAQQCAf7kT/6EH//4x2QyGSIR
      mcUg7o1lW8xlZnh9/DWOXP052XKGrsgW/t3+r/Cpwefv+yElQoh31BUAlmXxzW9+k4WFBU6e
      PEmhUOCzn/1so8smNgDLtkgVV5jNzDC5Ms58dpbZzAwL2VlylRxel4/WYBthf4SYv5nWUBth
      X4RYoBkFhSNjP+fC/Dk8mpt9nft5dseneKz7wFq/LSE2hbpnAd04D2A9nAAms4DWTkkvMpq4
      xNtz57i6dIWp1ASV1X56BYWgN0R/bCvRQDPtTR2U9RLJfIJsOUOqtMJSYQnTMmrPF/KEeG7o
      Vxje/inpoxfiAau7CyiXy/Gf/tN/oru7G0VR+KM/+iPc7lv7Z8XDpayXmUlPcXb2FBfmz9Uq
      fJ/bz474IJ/Z+Vk6wt1siWyhI9xN2Bf+wOezbItitUCquIJu6nRFumXDMyHWSN0B4PV6+fjH
      P84Xv/jFRpZHNNiNCjhdSlOo5smVs1SMCrpZpagXKOml2s/LhSUuzJ+jYpRRUOiMdPMru3+V
      7a072dm2C/+HqLhVRSXkbZK+fSHWgboDQFVVJicn+au/+isUReFrX/uatADWobJeJplfXD0Z
      aoHlwhKZUppUaYV0Kc1yIYnxri6Y2/FoHtyah+ZACwd7P8aj3fvZ17WfJqm0hXio1DUGkM/n
      GR0dvena/v377/lAGNu2SafTXL9+nQMHDmAYBseOHcPj8XDo0CEmJycZGxtj3759tLe/s3Bn
      s48B2LbNQm6ea0tXmc/Mki6lmM1Ms1RIslJcrt2noBDwBIn4o4Q8IVqCrTQHWmgJxmvXwr5I
      rcIPeIIEPIE1fGdCiAeprhaArussLi7Wfr5fu4Hats3169dZXnYqrXPnzrF9+3ay2Syjo6OM
      j4/z3HPP8fLLL3P48OF7fr2N6kaFf272NGNLVxhLXiGRX1j9rULMH6MrsoVd7Xvpa+6nNdRO
      R7iLtlD7h+qmEUJsDnUFQCwWa0gFrKoq+/fv59VXXwWctQYHDhwgGo1y8uRJ/H4/qqri8XgA
      ME0Ty7KwLAvTNKlUKve9TGutalbJlNMsF5eYy85wbfkq5+fO1Fa5tgbb6Itu5bODL7I9Pkg8
      1Pb+lbzFQ/l3JIS4P+oeA7Btu7YFxOLiIgcO3P+52m63m0qlQqFQwOfzkc/nsW0by7IAZwtq
      TdOwLAtN0zbsVhS2bbOYm2ds6QpTqUnSpRTJfIJ0aYXF3MJN93Y0dfJY9wEe7drPQHyQjvDm
      7PYSQtx/dQfA3Nwcp06d4urVq2iaxvbt2+95JXC1WuX48eOMjY0RDofZs2cPL730EqZp8vzz
      z3Ps2DFee+01/P6N3Y1xo8I/N3eGseQo5+fO1vac92gegp4QXZFuBuKDPL3tE0T9Mboi3UT9
      zVLhCyEapu6FYLlcjj//8z/nscceo1Qq8eUvfxmf7/7vla7rOoqi4HK5sG2bSqVyy+us50Hg
      qlEhX82TKaWZSU9zfu40Y0tXWczNA9De1MmO1kEe6XqcgfgO4sFW3LfZ70YIIYXG6+0AACAA
      SURBVBqt7gCwbZuFhQXK5TKGYTAwMHDPs4A+rAcZAFWjQqFaIFNOky6lKFYLzs+l9OrXFOlS
      ikw5TaFSIFvJ3PT4WKCZwdYh9nU9xo74ED2x3oaXWQgh6lF3F9DMzAzf/va3efTRR1EUha1b
      t65ZADwIp6bf5P9+9RsfOGc+6AkS8cUIeoP0Nw8Q9ASJh9oIekJEfBHamzqlwhdCrFt1B0Ak
      EqG7u5tDhw4BPNSVP0BvrI/Du3+VgCe4WtFHCXpDztfVufVCCLGR1R0ALpeLjo4OTp06BcCW
      LVse6hBoDbXzW4//zloXQwghGqbuGtzn85FOpxkfH6dSqciB8EIIscHVHQATExO0trby9a9/
      Hcuyaqt3hRBCbEx1f4zv7Ozkv/7X/8rc3BxLS0tEo9IHLoQQG1ldAbC0tIRpmhw+fJh8Ps/j
      jz/e6HIJIYRosLoCwDAMDMOo9f0Xi8VGl0sIIUSD1TUG0NHRQXNzM4qikM1mOX/+/H3ZDVQI
      IcTaqXsQOJVKMTExwfj4OC0tLeRyuUaWSwghRIPVPQjc3t6O2+3mk5/8JMlkknD4g89+FUII
      sb7V3QLQdZ2+vj6mp6e5fPlyI8skhBDiAag7AJaXlxkfH+fKlSs0NTWRyWTu/CAhhBDr1l11
      ARmGwfDwMMlk8p7PAhBCCLG26gqAqakpDMMgFosxPT19384EFkIIsXbqCoBwOIxlWWzdurVW
      8T/MG8EJIcRmUFcARKNR0uk0P/rRj2hqakJRFIaGhiQEhBBiA6t7DKBardLT08MLL7zgPFB2
      AxVCiA2t7lpcURTOnj1LpVJBURS++tWv4nbLWbZCCLFR3dXH+J07d/L8888DoGlaQwokhBDi
      wag7AILBID6fjxMnTqAoCl1dXTIGIIQQG1hdATA/P0+hUOBjH/sYbW1tXL58WaaBCiHEBlfX
      R/hEIsHU1BSXL18mnU5z9uxZTNNsdNmEEEI0UF0tAJfLxRtvvEG1WmV2dpbx8fFGl0sIIUSD
      KXYdfTnlcpnZ2dmbrm3dunXNxgAsy2JxcZHOzs41eX0hhHgY1NUC8Pl8DAwMNLosQgghHiCZ
      xiOEEJuUBIAQQmxSEgBCCLFJSQAIIcQmtW4DwLZt0uk0V65cIZ/Pr3VxhBDiobNuA8CyLE6c
      OIHb7eaNN95Y6+IIIcRDZ10HgNfrpb+/H8uy1ro4Qgjx0Fm3AQDIfkNCCNFA6zYAVFWlUqkw
      Pj6OoihrXRwhhHjorOsA+NjHPoau63z0ox9d6+IIIcRDZ92e66goCtFolGg0utZFEUKIh9JN
      AWDbNvPz82tVlrrZtk0+n5cxAiGEuAd17Qa63shuoEIIce/W7RiAEEKIxmpoANi2jWEYt712
      o+Hx3nts237f3wkhhLh/GjYIbNs2R48epVqtsmPHDnp7ewFYWFhgZGQEl8vF008/zbFjx6hW
      qwwODtLS0sKZM2eIxWLs2rWL06dPk81maW9vZ/fu3Y0qqhBCbEoNawHc2L/nmWeeYXR0FHBC
      YWRkhOHhYZqampiYmEBRlJvu6enpIZfLYZomy8vLDA8PMz093ahiCiHEptWwFkCxWCQSiaBp
      2i1HR7rdbmKxGAsLC7V7FEUhEAjQ3NzM/Pw8tm3j8XhQFAVN0wAwTRPLsrAsC9M0qVQqjSo+
      WDpWYRlsE4zq6jXD+RmwLQNFdaMEW1ECzY0rhxBCNEjDAiAUCnHp0iVM06z9udG/X61WSSaT
      dHd3MzExgWEYt+z3oygKlUoFy7Jq4wCapqFpGpZloWkaXq+3IWW3bRvj2uvor/1fYJlgOkFj
      W2YtALAMUN2owThKuAs1sgW1eRta6y7wx1D9URS/rGEQQqxfDZsGats2//Zv/0alUmFoaAif
      z0epVMLj8XDu3DncbjfPPvssR48erd2jaRqXL18mk8nw+OOPs7S0RDqdprOz86YxgAcxDdTK
      zqGP/BAAxdvkXHR5UTRP7XtbL2IlLmMmL2GX0lDOYleyKP4Yij+KEmpH8TaheMMogRZw+1D9
      zeD2owSaUTQveAIoLj9oLhR3ANwBFFVr2PsSQogbGroOwLZtTNPE5XLdcu1Gt8/t7vmgx8P6
      Wwdgmzp2KY1dyWJnZjCTlzEXLmCXM2BUwKhgGyUwDWy9CGbV+aN5UTwBcPtBdQJA8QRRfFHw
      NqF4QyguH9wInXd7dxi9H5cPxRd+J2zcARSXx7nu9kvYCLHJyUKwBrItY7Xyr4BeAms1AIwq
      tlnGruSwC0nsYgpbL2FnZ7GLK9hmBfQiWJbzHDe6nd7NfJ/rt3l9jPI7YaO9EwCKJ4jaOoS2
      5QnUaB9KMI4q4xlCbBoSAOuMbdtgVrCrRbAtZ6zBuk1F/37B8O7nuhFAetEJm3wSu5Ryfi4s
      YWVmsEsr2Ll5cAdQg3HUSC9q5yO4tjyB4m9GCXfeuaUhhNiQJAA2MdvUsYsrWNlZrMQlzMRF
      rOQoVm4RqjmUQDNquBslsgU1PojWvA0lssW57o+tdfGFEPdIAkDU2LYN1TxWbhErM4W1MOIM
      cOfmsfJJKKedVkGg2Zn11LLdGYvwhMDtQ1Hd4PatdjeFUFSXc90XQfEEwROSMQch1hEJAPGB
      bNvGLmecsYrsHNbKOFZmCjM5il1cXp0mW10dq7BWxyYMMHVQXasD0U4AOLOhYs54Q6gNJRhH
      8cWcoFBV537V5XQ53a7b6TbdXk6XmX77wqsqii/qvI4i214J8V4SAOJDsc3qrQFg3RizMLBN
      HYwSdimNlZ7Cyi9ip6ex9QJ2JQfV4uqAeNmp+JX3BIDrNgFwu4Fv28a23icAFCcA1HAnalMX
      ass21LY9KIGYE0YSDGKTkwAQD4zTxVTAruacQW69iK2XnaAwdTDK2JWsM0uqWrj1CW50M72b
      ojhdULd7vWoBKzuHlRhxZlpVstilFRRvGLxhJxhi/U53VtseFG8QJRB3wsHta8DfgBDriwSA
      eOjZlul0Y5Wz2Lk5rNQk1so1rOUxZ9ptJYddWnG6qwJxFF8YtakTtXkranwQNdLjtBakxSAe
      MhIAYtNygiGNXc6tBsMEVmYWK3nZaS0UlrALS85q7UAcNdzltBhad6K1DDhhEYw7i+qE2IAk
      AIS4DbuSxyouOQPf2XmsletYiyNYhSR2fhFsEyXQ4gRDrB+tdQi1Y48zS8obRgm2SGtBrHsS
      AELUybZM7OIydn7RGVtYGcdauoKVmXZaC6UVFG8EbnQhte509nfS3CguH4o3BCirq7G9zj5R
      br+zd1SgRVoS4oGTABDiHt3UWkhNOBsErlxzNgi0dGemlGVgm6vbihur25ibVWfc4UYA+MKo
      0X7USDdq65AzdTbQ4nQzae73L4AQH5IEgBANYBsVZzNAU3emrt4IAJt3thev5LGLy1iZGazl
      q1i5Recx1QJ2cQlcfqcrKRBHa9mG2jyA2r5ndbfZ1T+KsrZvVGxoEgBCrBM3QsOuFrBzc9iF
      JczkFazFt509nMpZ7FLKWVgXiKEE21FbdzothpbtTiDU1jdIMIg7kwAQYp17Z7aSM43VTI5i
      zV9wFteV085MJaOC4lsdf7gxWyncjdq81QkMX9SZzeRtcrYYFwIJACE2LKfFkF4dgE5jLo1i
      Z2ad9Q2llNOSKC7XVkTfCAA1EEcJd6KGt6DGtzstBn/MmdYqLYdNRQJAiIeMbRnYpQzoTgBY
      uUWs7KyzBXhq3GlJlNPOdhylFHhDKP4YargLreOR1W6lLU4g+GMoWsNOjhVrTAJAiE2m1nKo
      FldnLo1jzp93zocoLjsD0Kq71jJQQ20o4W6na6l5m3NynT8GHr+zmZ+0GjYsCQAhBLAaDMVl
      Z/B5aRRr+bqzKlpfbSlUi07Lwb1a8Xv8KKF2XH1PoXbsRY30ygD0BtPQQ+FvHOre19eHx+Ps
      7qjrOhMTEzQ1NdHe3k4ymSSTydDX14fL5WJychJN0+jp6ak9Ph6PE4u9cwCJBIAQD45dLWKX
      U87XfAK7knUWwaXGsVbGsfOL2OUsSrQHrXUnWscjaN2PozR1yLjCOtewANB1nZ/97Gfs2LGD
      ZDLJk08+iW3bnDx5knA4zMTEBE8++SRHjx5lx44dLC0tEY/HyWQylMtl+vv7OXv2LPv27ePi
      xYu88MILteeWABBifbArOWeMITGCOX8ec/Y0Vn4BLAMl1I4ajDszj27sm7S6p5LiC4M74BwQ
      pHmdJ3N5nO3AVQ0UzVktrcr4QyM17G83k8nQ2dnJwMAAk5OTtevZbJaDBw+iqiqjo6N0dXUx
      MDDA1NQUU1NTPPvssxQKBd5++21s22ZycrLWerAsC9u2a18Nw2hU8YUQ9dD8EO1HifbjGvwV
      tHIaO7eIuXAea2UcM3kZMvOwdN1ZAFfNg14CVbs5ABRA86weDvSuAHAHnM33Oh9FCbWDLwL+
      ltsfGCTuWsMCQFEULMu65fqNBodt22iaVqvMbdtGVdVaBQ/g8XgYGBhgZGSkUcUUQtxHii/q
      HMLTuvOdi0bJqfTfFQB2KeVMUTUqzgFB8M5ZEGaldt2u5DCu/BT9zP/rhMJqACjhLtTWIbTu
      /Si+GGqkW0LhQ2hYAEQiEebn5wmFQgQCAbLZLNVqlWg0ysWLFxkfH2d4eJgjR44QDAYJBoO0
      tbVx6tQpSqUSO3bs4NSpU5imSaXiLJ1XVWd3RUVRUBQFl0uah0Kse64m8DV9qIfaRsVZ51Bc
      Wj3c57Iz9pCdwpo/jfnG36D4o7VZSlrno6vbZURRw90oLu99fjMPl4YOAieTSVKpFFu3bsUw
      DAzDwO/3Mz4+Tjgcrg0Cp9Np+vv7cblcTExM4HK56OnpIZFIkM1maWlpobm5ufbcMgYgxOZm
      V7JYBWcDPjN5GWv+fG2tg11K10JBax1C63zECYVgHNUfu/OTbyIyDVQI8VC4KRTmz2EmR7HT
      U1jpKWftQjCO1r4HtfNRtPY9tUHqzUwCQAjxULJt21nwlp7CTFzGmHy9FgioLtRQuzOO0PmI
      EwjR3k0XCHUHgG3bTE1NkcvlUBSFXbt21frkHzQJACHE3XpvIJjz57ASF50B6VIaNdqLEul2
      1jHUAqFldbbSwzneWHcArKys8O1vf7s2Y+dP//RP12wQVgJACHGvaoFQSmElL2POncdMjGCn
      p1bHEWLOeQzugBMC3iYUXxglEAeXF/XGYT3eJuf37kBt6qriCaz126tL3TV4pVJh165dpNNp
      CoUChUKBSCTSyLIJIUTDKIri7Gnkj6E1b8O98zC2ZWClp7Azs85ahqxzLkNtOwyziq0XnQN+
      qiXQi6BqTuXvCaBoXuerL+qc8NbUhRJsRY10oQRawBte3Uspui5mKNXdAjAMg+npaSqVCpcv
      X+bFF1+UFoAQYlOwLcNZm2BWoboaAHoJWy9gl9K1qap2YclZHZ1ffGeNg150jgdVNRRv+KaA
      0Fp3ofUeQm0dQvVHH/j7qqsGt22bubk5Ll68yPDwMG+99Za0AIQQm4aiusDjQiEIdUwlrQVG
      JffOXkqlFNbKBHYh6bQsikvoF39E9dR/QW3eitZ9ANfWYdS23c7YwwNQdwB873vfY3Z2lsnJ
      SVwuF6FQqNFlE0KIDakWGJ7gbX9v2zaYFezcAubiCMbEUczpN9Ev/HfUaC/aloNoPR9BjQ+i
      +mMoDWod1NUFVCgUqFQqTE5O0traiqIodHZ2yiwgIYS4D2zbxi6tYC2OYIy9gjl3Bis16QxE
      +2MoTe2owVaUWD9a8zaUQIsTCpoXxeMHxQUuz13PVqorAK5du4au65w+fdp5kKLwhS98QcYA
      hBDiPquFQeIyZmIEa2UCKzMNlSx2OeecyYDiBIDLi+L2O7uoas5uqri8zvcuL4o3jBLuckIj
      1O4MPnubnJlL1NkFNDAwgGVZzM/Pk0wmGRwclH14hBCiARRFQQm0oPY/hav/KQBs03A2y6vk
      nLGE4pJzFkN2zhmYNirO703dOQvayq4OVBehnKVazoDL904ABFtRm7fWPw10YWGhti//D37w
      A4aGhvD5fA37SxBCCOFQNBdKoBkCzRDrQ/uAe23LAMtcnapaxK5knZlK+XmnNbEyjlVYxBh/
      rf4ACAQCZDIZxsbGKBQKvPLKKzz55JM3ndQlhBBibTlnKrgArzMIHWq95R7b1J3FbvWuA6hW
      q7z99ttUq1UAfD4f27dvX5PZQDIGIIQQ967uFoBlWbzyyitks1kUReHP/uzPcLvdjSybEEKI
      Bqo7ABKJBP39/ei6DjgtAgkAIYTYuOqeyN/e3k5vby9NTU3Mzs7KLCAhhNjg7mozOEVRePHF
      FwmHwxIAQgixwdXdAigUCly8eJFMJsOFCxdqg8FCCCE2prvqAorH43z/+99n165dda0BsG0b
      wzBue+3G5KP33mOaJpZl3fS7Gz8LIYS4fxp6KPzRo0epVqvs2LGD3t5eAObn5xkZGcHlcvH0
      009z7NgxqtUqg4ODRKNRjh8/jqIoPPPMM0xMTDA/P09zczOPPPJI7bllGqgQQty7ulsA2WyW
      I0eO1P3E+XwegGeeeYbR0VHACYWRkRGGh4dpampiYmKiVtmPjo5y4cIFDh06xNDQEJcuXeLq
      1asMDQ0xODh4d+9KCCHEHdU9kut2u/n5z3+O1+slEAiwb9++D9wNtFgsEolE0DTtlvvcbjex
      WIyFhYXaPYqiUCgUagPM169fJ5FIMDs7y+nTpzl8+HCte8iyLEzTpFKpfPh3LoQQm1zdAaAo
      Ck8//TTLy8tks1n27t37gfeHQiEuXbqEaZq1PzfOE65WqySTSbq7u5mYmKj18zc1NbGyskIu
      lyMWi9Hd3c3jjz/Oyy+/DICmaWiahmVZaJqG17v2R6oJIcRGVXcAqKrK3NwcpmnS0dHBnYYO
      AoEAqqpy5MgRdu3axcrKCqVSiX379vHLX/4St9tNT08Pk5OTvPrqqwwNDRGLxTh69CiqqjI8
      PIyiKBw5ckROHhNCiAaoexB4cnKSkydPYpomhUKBL3zhCzQ1NX3gY2zbxjTNm9YM3Lh2o9vn
      vfeYpomiKKiqWpsF5HK5UBSl9hwyCCyEEPeu7kHgzs5OlpeXOX/+PLZt17UJnKIotywYu3Ht
      RoX+3nvePWagKAput/umyl8IIcT9UXcXkMvlYteuXfj9fvbv3y+VshBCbHB1twAWFxc5d+4c
      H/3oR3nppZdkBo4QQmxwdQeAz+cjn88zMzNDuVzmyJEjpNPpRpZNCCFEA93VgTAXLly46drg
      4OAdB4IbQQaBhRDi3jVsK4hGkgAQQoh7d1fbQV+8eJF8Ps/k5CRf+tKXPnAlsBBCiPWt7ho8
      mUwyNjbGqVOn0HVd+v+FEGKDqzsAWltbSSQSfOQjH6GlpYVwONzIcgkhhGiwugNAURT6+vpI
      JpN33AZCCCHE+lf3GMDi4iKTk5N86lOfqm3VIIQQYuOqOwCi0SjJZJLR0VEURWH79u2NLJcQ
      QogGu6uFYJ///Ofx+/309vbKVhBCCLHB1R0Auq7XVv+++uqrck6vEEJscHc1DbSrq4tf//Vf
      JxAIkMvlGlkuIYQQDVZ3AHR3d1OtVvn2t79NJBKRQ1qEEGKDq2sQeGFhAcMw6Ovrqx3eIlNB
      hRBiY6srAFRVRdM0/H5/7VB2IYQQG1tdXUBtbW2Ew2GKxSLz8/O88cYb0gIQQogNru4xgHQ6
      zeTkJDMzM3R0dNxxENi2bZLJJFevXqVardau67rO1atXWVhYwLZtEolE7R7LshgfH2dqagrb
      trFtm+XlZVKp1Id/h0IIIW6r7gBob2+nqamJT3/603R3d99xENgwDE6ePAnAW2+9BTihcObM
      GUzT5OzZs+RyudrvTp06xbVr11heXmZqaoqFhQV0XefEiROMjIx82PcnhBDifdS9EljXddra
      2rh27Rrj4+M8+eSTH7gdRCaTobOzk4GBASYnJ2vXs9ksBw8eRFVVRkdH6erqYmBggKmpKaam
      pnj22WcpFApcvHiR6elp9u3bx9TUFOCcA2Dbdu2rYRj38NaFEGJzqzsAVlZWmJiYYGVlhZaW
      FnK5HLFY7H3vVxTltoPFN8YObNtG07RaZW7bNqqq1ir4YrHI4uIiHo+H+fl5dF1H07QP8RaF
      EELcTt0B0N7ejqZpfOITn2BpaemO20FHIhHm5+cJhUIEAgGy2SzVapVoNMrFixcZHx9neHiY
      I0eOEAwGCQaDtLW1cerUKUqlEoODgwwNDVGtVgkEAqiqWmtxKIqCoii4XHUXXwghxHvUVYNO
      Tk6i6zqBQIDr168D3HEWkKZpHDx4kFQqxRNPPFHrrnnssccYHx/nwIEDBINBDh48SDqd5sCB
      A7hcrlrF3t3dXWtFxGIx+fQvhBD3WV1nAmcyGSzLYn5+vtats3v37jXbElrOBBZCiHtXVwsg
      EomQSqX4wQ9+QCQSQVEUdu7cKWcCCCHEBlZ3J7phGPT29nL48GHngdL/LoQQG1rdtbht21y4
      cAHLslAUha985SsSAkIIsYHVXYOrqsrAwADDw8O1n4UQQmxcdQdAIBAgHA5z5swZAHp7eyUE
      hBBiA6srAGZnZykUChw4cID29nZGRkZkMzghhNjg6voIv7S0xMzMDFeuXCGTyfD2229jmmaj
      yyaEEKKB6moBuN1uTpw4ga7rzMzMMDEx0eBiCSGEaLS6FoJVKhUWFhZuutbT0yMLwYQQYgOr
      qwXg9Xrp6+trdFmEEEI8QDKNRwghNikJACGE2KQkAIQQYpOSABBCiE1KAkAIITYpCQAhhNik
      JACEEGKTkgAQQohNqqEBYNt27Szg9167sQD5vfeYplk7dvK99wohhLh/Gnaii23bHD16lGq1
      yo4dO+jt7QVgYWGBkZERXC4XTz/9NMeOHaNarTI4OEg0GuX48eMoisLTTz/NhQsXyGaz+Hw+
      nnrqqUYVVQghNqWGtQDy+TwAzzzzDKOjo4ATCiMjIwwPD9PU1MTExASKotTuuXDhAocOHWJo
      aIgrV64wNDTE008/zcrKSqOKKYQQm1bDWgDFYpFIJIKmabdsGud2u4nFYiwsLNTuURSFQqFA
      OBzG5XIxPT2Npmn84he/YN++fcA73UOWZWGaJpVKpVHFF0KIh17DAiAUCnHp0iVM06z9sW0b
      27apVqskk0m6u7uZmJjAMAwsy6KpqYmVlRVyuRzhcJjjx4/z+OOP09bWBoCmaWiahmVZaJqG
      1+ttVPGFEOKh17AuoEAggKqqHDlyhF27drGyssLc3Bz79u3jl7/8JYVCgZ6eHhRF4dVXX2Vo
      aIi9e/dy8uRJrly5wsDAAOl0mpGREY4dO9aoYgohxKZV13kAH5Zt25imicvluuXajW6f995j
      miaKonzgWQNyHoAQQty7hnUBASiKclPlf7tr7/1Z07RGFkkIIcQqWQgmhBCblASAEEJsUhIA
      QgixSUkACCHEJiUBIIQQm5QEgBBCbFISAEIIsUlJAAghxCYlASCEEJuUBIAQQmxSEgBCCLFJ
      SQAIIcQmJQEghBCb1IY4FF4IIcT9t64PhR8ZGSGbzdLe3s7u3bsbVVQhhNiU1u2h8JcuXWJ5
      eZnh4WGmp6cbVUwhhNi0GhYA9RwKv7i4eNtD4Zubm8lms3g8HhRFkUNihBCiARoWAKFQiJWV
      lZsOhb9xMPy7D4VfWVm55VD4ZDJJLBajUqlgWZaMAwghRAM0bAzgdofCl0ql2qHwbrebnp4e
      Jicna4fCx2Ixjh49iqqqDA8Po+s6R44cqY0fCCGEuH/W9aHwt3s8yKHwQghxP9xUs9q2XRu8
      Xc8sy6JSqZDL5da6KEIIsWHJQjAhhNikbmoBKIpCU1PTWpWlbpZlUSwWN0RZhRBivZIWgBBC
      bFINCwDbtkkmk1y9epVqtVq7rus6V69eZWFhAdu2SSQStXts22Z5eZl0Oo1t26TTaa5cubIh
      xiWEEGKjaVgAGIbByZMnAXjrrbcAJxTOnDmDaZqcPXuWXC5X+92pU6dIpVJcuHCB0dFRLMvi
      xIkTuN1u3njjjUYVUwghNq2GrQPIZDJ0dnYyMDDA5ORk7Xo2m+XgwYOoqsro6ChdXV0MDAww
      NTVFLBbjiSeeYGRkBMuy8Hq99Pf3MzY2Bjh9/7Zt177KAjEhhPjwGhYAiqLUdvV8t3fvAqpp
      Wq0yt20bRVFue+9aMBIJisdPYOs6VrHolKdaxdb11e91VJ8Xd38/nv5+1GAQLdyEGg6vWZmF
      EOJuNCwAIpEI8/PzhEIhAoEA2WyWarVKNBrl4sWLjI+PMzw8zJEjRwgGgwSDQXK5HDMzMywt
      LZHP56lUKoyPj9eC4caeQoqioCjKLQvE7hfbtqnOzlI6cgRQUNzu/7+9e+uN6jr/OP7dxxnP
      jMfjsc0YG2xODiQqpBUtBAIkkUJFFKlq1KpvoFftTXrRN9CrXiYvoHetKlW9aFOqKI2a0CSu
      ISV/EtKCARPjE2PwYTxnz96z99r/i21PYk4ZQgYwfj4SCpnsGZYTaX5Z61nrWeGfa+igG43f
      +56Pe/5zSuUyeiKB3t6O2dOD1d+H1deH1d8PtoVm2ejRCBgGemTlr9FoS8YuhBDNatlJ4NUi
      8NLSEtu3b8fzPDzPo62tjWvXrpFMJslkMszPz5PP59m2bRuO47C4uIhSiq6uLoIg4ObNm/T3
      95NIJBqf/TBOAgdK4S8uAjQCAMNAW21sZxgEnofK5/Hm56lns3g353AnJlD5Al4uB0qh2Taa
      ZaFFI2iGiRaJoBkGWjSKHo9hpFIYHR1oto3e0YHRmUJvi4XvsazwzzTuUKr56ljuxjDCz41E
      vsV/M0KIJ0VLW0G0yuPcCiLwPPx8Hj+XQ1WrqEoFVamiikWU4+AXCgSVKqpaJai7qFqNwHHA
      81HVCoHjhl/8KwGgGQbcIQA0w2jMRu5GM/QwgKJR9FgYNnosFs5WOpIYqRRmVxdGd7eEhBAb
      kATAIxIEAUG9TrASAIHnhaFQq6EqVfx8HjwP5bpwh2K3cpw7vr7mGddFHniBGgAAFMNJREFU
      lSuoYiGsZSzXCNyVsKnVCJaX0Ts6wmWrga3YK/UMoyuN2dXVqh9dCPGYaFkNQNybpmlotg22
      3fI/qxE2y8thIdvzCGo1/KU87sw0zuhlnMuXqZ75mMB1MbvSmH19WFu3Et2zG6OzE70jhdGe
      +HI5TAix7skMQIRba4tF/NwS7vQ07pUx3MkJ/NwSfqGAZlkYHR3oHUnsbduxtvRjDw6gJzvC
      ZabVWoWur9QsDAkKIdYBCQBxR0G9jp9bwltawrt+HffaNdypKVSpFC4rLS9jJJPhF/5qrULX
      GzULzbLQ7Ah6ewKrtxejszOsNcRi6O0J9Gg0rE1I7UGIR0YCQDQt8Dz8UglVLuPNzVGfngmX
      lJaXG7WKwHFW6g3LBJ5P4DorgVElqFTDXUntCbRoG3o0Eu6KsiNopokWCXdM6bEYeix2259/
      p7pHoBRBrXbnAZsmVm8v9o4d6Ik4ejIZ7rj6ut1TQmwQEgCiZQLPI3BdVLmMWl5Glcr4S0t4
      Cwv4S+HykiqVCDwflCLwPfBVWK/w6rd9nmaYcOuXtwaaeeflpsCrhzuwSiX0aBQ92Y7Z3Y25
      eTPmpk3YO7ajJ5PhIb5U6raDiEI86SQAxCMXeN5KAPgEvg/1evjare509kHT0O5yIDDwPFSl
      irewgDc7izc3hzt+Db9YRJWKqEoVPR5Hj8cwu7vRUynsgQHMTZswuroaJ7vl0J54UkkAiA0l
      8H1UuYxfKoU1jluDoVJB5fPhUlWyHSPZgdm3GXtwEHvnDoxkEj2VQo/HZcYg1j0JACH4MhhU
      pYKfL+AvLuJOTuJ+MY6qlPGLpXApKR7HSK2enRjAGhzAymTCbbKdsowk1hcJACHuIfD9sH5R
      LOItLFKfnMT54gv8ufmwIF4ogGFgrByoM/s2Y/b0YO/YEQaCaX65O8qy0GDt30tgiEdIAkCI
      b0DVamFRu1DAm51dmS18Ec4U8vlwm2xHEkxz5XyEiWaZgNYIgPB8RTI8dDcwgJHqwEgkwrqE
      FKXFQyABIMS3pFFfyBfw5ufxZmcb22ID1220FVfVKgSgyqUwSCpVVKFA4Hlhn6aVZSajowNr
      cBB7cPDLorQEg/gWSQAI8YgEvk/gOGHdoVDEzy/hzd7AX1rCvXYNtbyMny+g8vlwVpBMYvaE
      21it/n6srVvCBn/xOHp7uwSDuG8SAEI8hlbDwc/nw22s2a/sVlrpNht4XtiiIx7DSKfXnG8w
      2pPo8VgYDC26N0OsfxIAQqwjge/jFwr4uVwYDrOzuBOT+IuL4WyhUkFVKo2lJL29HaO9HbNv
      c9j+u6cnvHNi5bS1BMTGJv/lhVhHNMPATKcx0+k1r68Gg6pUVs43ZMNur5NT+EtL1K/PNArX
      6Dp6rA09FsdIp7EyGcz+PuwdOzC70ugdHdKjaYOQGYAQTzhVq31510SphF8s4c3O4ufzuOPj
      +MVSuKTkuhjpdFh87uvD2jaI1deHnmwPZxOrMwapNTwxZAYgxBNOj0bv2s4i8P1wO2suh7e4
      SH1qKtzSOjHB8n8/R+ULaJFIWE+IrSwppTow+/owUh1YW7Zi9makl9I61dIZQBAE+L6/5vL2
      1dcMw0DTtNue8X0fTdPQdf2O7weZAQjRan4pPPns5/Phyej5+fDu65mwA6xfKoeN/FwXM5PB
      7Okh+uxeInv2YKbTsl11nWjppfDDw8O4rsvQ0BADAwMAzM7OcuHCBUzT5OjRo4yMjOC6Lk89
      9RSpVIrTp0+jaRpHjx7lk08+QSlFLBbj+9//fuOzJQCEeDQC3w/bfZdK+KUS9ZkZ3LGrOGNj
      +ItfLiPZg4PYQ7uwt21Dsy20SHTlDohI2EfJuPd91uLhaNkSULlcBuDYsWP861//YmBggCAI
      uHDhAi+88AKff/45ExMTaJrGsWPH+OCDD4jFYhw8eJBiscilS5coFoscOHCATz75pFXDFELc
      B23lxjc9GsXs6SGyYwccOxZ2Xc3lcK5cxh27ivvFOLVLo6h8ASwLPRIJLwCKRtHiMYz29rDY
      bNtosVh4RWostnKRkLVyL0QcLRoND8Wl0+gP4frUjaZlAVCtVuno6MAwDPRbWvhalkVnZyc3
      btxoPKNpGpVKhWQyiWmaTE5OEgQB586dI7KyI8H3fZRSKKXwfR/HcVo1fCHE/TAN2NSDvakH
      +8iRsK5QKqLyBVSxGJ50rlZRi4sExWJ4WvrmTQJfEdRdAAK3Dson8BWszDSAlQDoQu/uwujt
      xdi6FSPdiZFKYdyyG0rcn5YFQCKRYHR0FN/3G7+CICAIAlzXZX5+nv7+fiYmJvA8D6UU7e3t
      5HI5SqUSiUSCSqXC8ePHefvttwEwDAPDMFBKYRhGIxiEEI+ZSAS6u+76jwPXDW94+8oXfeDW
      CZQfvuYrqNfDZabJyfCsw9wc9Stj+KUSmq6H5xp6M5h9fUSfeRoj3dXYxir1h+a0tAbw0Ucf
      4TgOe/bsIRqNsry8jG3bnD9/HsuyePHFFxkeHm4809nZyfDwMLquc+zYMc6cOYOmaUQiEZ57
      7rnGZ0sNQIiNR9Vq+Pk8qlSins1Sn5gMt7HmC3i5XBgKXemwVXdfH5FnngkDIp1Gj8cf9fAf
      S7ILSAixbgW+32iNsRoKzvg4/mIOv1BAj0Yx0mkiQ7uwBgeJDO0KG+u1tz/qoT8W5CCYEOKJ
      Evj+SgDkcScmqZ0/j3fjJvWbN9EsC7MrjbVlK/bQLiJ7dmOm0xip1KMe9iMhASCEeKIFQYAq
      lfBu3lwTCF4uB8oPawc9PUSf3Udkxw6MrvA0tLYBdh01HQD1ep3f//73LC4uomkar7/+OpZl
      tXp8dyQBIIT4plYDwc/lcMauUs9mcS5dxs/lUKVSo45gb9uGNTiA0ZEKT1KvbFHVo1HQDfRo
      uLV1PZ9paHoX0I0bNzBNk02bNgHged4jCwAhhPimNE3DSCYxkknsbdvC3Ym1WtgOY36e5c/O
      4167RvU/Z1H/+oCgVgvfZ1loto0WjaDpRuNcw2p7DCOVCs84dKTCZn22FfZPikbDw2+P4fdl
      0wGQTqfp6+tjYWGBL774gnW4ciSEELfRNA2trQ29vx+rv5+27363UUdQ1Qqq5oSN9KqVxu1t
      ynXDHUn5QtiW+8YNVK1GUKuFN8DV62i2jR6LhUGxGgybesL7o/v7wsNwqRRmd/cjm0U0HQC+
      79Pd3c0LL7zABx98gFKqleMSQohHRjMMzE09QM89nwuCIPzCr9UIak4YAvXw+s/ArYeH3xpd
      WIvUZ65T+98FvPn5sG1GqgMz04s1sJXont1E9+1Dj8Uezg9JkwGglOKNN97gxo0bbN++nfn5
      eY4dO9bqsQkhxGNN07SwWGzbkGz+fUEQoCoV3CtjVP/v/1g++wnld/6BZttEv/ss8UOHiDzz
      NEZHR+sGz30UgcvlMtPT0zz99NMtHVAzpAgshHiSBEFAfXqGykcfsXz2E7wbNwCwtm3D6u/D
      HhhA7+zE6tsc3tHwLc0SmgqA//73vziOw6lTp8I3yS4gIYRoiSAIqM/MUD19BnfsKvXZLP7C
      4ppn9Hgcs28zejweblm1rEahefUXto0ejzVORt8pNJqeAQRBwPz8PFNTU+zZs4dEIvHt/LTf
      gASAEGIjUY6DP78Q3smQvY43v4CXzeLNLxB4dQK3jqpUwPPu+hlGZydm3+ZGIJh9fc0HwMLC
      Am+++SYvvvgip06d4je/+c1tLRoeFgkAIYS4M+W6UK+jXBeVz+PNzVOfncWbm8PLzlLPZlHF
      InAfu4B0XWf37t3s3buX8fFxZmZm6Ovrw94Ap+WEEGK90FeK0no8Dp2d2Nu33/aMchy8bBb9
      Du+/o0gkglKKd955h0gkwocffsjS0tK3OnAhhBCtp0ci2Nu3Nz8DaGtrwzAMstksmqbxq1/9
      Sk4CCyHEOtZ0AExPT6NpGtvvMJ0QQgix/jS9BJROp+no6GBpaYkzZ85QW+mPIYQQYn1qegYQ
      jUbZvXs3r776KhcvXqRdLlQQQoh1rekZwMzMDJcvXwbg008/pVKptGxQQgghWq/pGcDAwAB/
      +ctfGB0dJZFIEHuIDYuEEEJ8+1p6Kfzo6Cizs7McPHiwcXJ4eXmZkZERenp62Lt375pnotEo
      IyMj2LbNwYMHyeVyfPbZZ/T09LBv377GZ8tBMCGEeHBNLwFVKhXGx8eb/mDHcchmsxw5coTT
      p08DYSiMjIxw6NAhCoUCc3NzZLNZnn/+ec6cOcP58+fZtWsXqVSKK1eu8J///IeXXnqJ73zn
      O/f/kwkhhLinppeATNPkr3/9K7/85S+JRqNf+3yhUCCTyWBZFrq+NmdisRj9/f1cvXqVTCaD
      bdtomkYul2P//v2kUinOnj3L1NQU77zzDolEgmPHjuH7PkoplFL4vo/jOPf/EwshhADuIwAc
      x6Fer/Pmm29imubXdgONRqONQvFXL4/xfR+AarVKKpWiXC6HvbGVwrIsHMehUqnQ1tbG0NAQ
      L730Ev/4xz8AMAwDwzBQSmEYBpFI5Bv90EIIIe6zG+g///lPisUiW7Zs4cCBA2iadtfnlVK8
      9dZbJBIJMpkMmUyGarWK67qMj49TLpd57bXXOHnyJIlEgt7eXnp7exkeHsb3fU6cOMHZs2cx
      TZNiscirr7665rOlBiCEEA+m6QCYnJzk448/Dq9ACwJeeeUVOr7mtpogCHAcZ82SURAEuK7b
      WBq69Zl6vY6maZimSRAELC8v09bWtiZsJACEEOLBNb0E1NXVxejoKIVCgUQiwc9+9rOvfY+m
      abfVCzRNW7N0c+szX11W0jRNtpsKIUSL3NcS0MLCAufPn+fQoUPE4/FWj+2uZAYghBAPrult
      oEtLS7zxxhvUajV++9vfNoq5Qggh1qemAyAIAvbt28fRo0fZuXMnc3NzePe4fkwIIcTj7b4u
      hCkWi/zpT3+iXq9z8uRJ5ufnWzk2IYQQLdSyVhCtJDUAIYR4cE3vAgqCgOvXr+N5HtlslsOH
      D7dyXEIIIVqs6QC4fv06n376KWNjY1iWxTPPPEMqlWrl2IQQQrRQ0zWAVCrFv//9b7Zs2UJb
      W1tT/YCEEEI8vpqeAcTjcX7xi1+wvLwMgG3bLRuUEEKI1mt6BjA1NcXvfvc7Ll++zJUrV9Y0
      eBNCCLH+ND0DSKfTdHV1sXv3boDbWjwLIYRYX+7rPoCdO3cyNjYGwNDQUMsGJYQQovWaDoBI
      JML169cplUps2rRJZgBCCLHONf0tfu3aNbZs2cKvf/1rTNMkl8u1clxCCCFarOkZQH9/P3/4
      wx8YHx+nUqnIGQAhhFjnmmoF4TgOQRDgeR6u6xKJRIjFYve8EayVpBWEEEI8uKZmABMTE7iu
      y/DwMBBe1PLzn//8nncCCyGEeLw1FQC7d+9u9P9fXl7mypUr8uUvhBDrXNNF4JmZGaamphgZ
      GUHXdRYXF7/2Pav3/d7ptdWVp1ufqdfra+4ZCIJADp0JIUQLNF0E7u3t5Y9//CMHDhwgl8t9
      7YXwSin+9re/kUwm6erq4tlnnwXg8uXLTE1NUS6X+dGPfsTf//532tvb6enpIZPJ8PHHH+P7
      Pi+//DLxeJy3336bVCrFkSNHHuwnFUIIscZ9HQT78Y9/jOM45PN5TPPeb83n8/T397N//37e
      f/99IPy/+enpaX74wx8yOjrKhQsX2LJlC9/73vc4deoUCwsLvPLKK5RKJS5dukQymWRwcJBC
      ofBgP6UQQojb3Fc76PHxca5cuUJXVxe5XI50On3X5+v1OpFIBGDNbqHV39u2TT6fJx6Po2ka
      uq6jlMI0TSKRCOVymenpaQ4fPszs7CxKqcZykFIK3/dvW14SQgjRvKYDYNOmTZw7d44f/OAH
      LC0t0d7efs/nU6kUn332GU899RS+71Ov11FKoWkalUqFqakp9u7dy7lz5xgaGsL3fbq7u5me
      nqZYLNLd3U0ymeTatWssLCzgeR62bWMYBkopDMNoBIwQQoj719Q5gKWlJXzfZ25urvHanj17
      7tkOIggCRkdHuX79OocOHcJxHGq1Gul0muHhYTKZDHv37uXixYtks1kOHTpEW1sbw8PD2LbN
      c889h6ZpjRvIBgYGGp8t5wCEEOLBNRUA09PTeJ7HxYsXG6+dOHECwzBaOri7kQAQQogH19Q2
      0K1bt7J582YmJia4dOkSly9flq2ZQgixzjVdA5ibm6Onp4ef/vSnAI+sDYQQQohvR9MB0NnZ
      yfvvv8/k5CSapvH666/LaWAhhFjHmg6AUqnE8ePH+clPftLK8QghhHhImg6ARCLBuXPnGB8f
      lxmAEEI8AZraBVQoFHAcB13XicfjzM7OMjg4KLuAhBBiHWtqF9DExAT/+9//GBkZ4ebNm7z7
      7rvU6/VWj00IIUQLNb0EdPHiRWq1Gq7rMj093coxCSGEeAiaCoDt27dTLBYbf3/ixAlZ/xdC
      iHWuqRrA40ZqAEII8eCavhBGCCHEk0UCQAghNigJACGE2KAkAIQQYoOSABBCiA1KAkAIITYo
      CQAhhNigJACEEGKDkgAQQogNqmUBEAQBFy9e5L333qNcLjdeX15e5r333uPzzz+/7RnP8/jw
      ww85c+YMQRBw6dIl3n33XS5dutSqYQohxIbVsgBwHIdsNsuRI0c4ffo0EIbCyMgIhw4dolAo
      MDc3Rzab5fnnn+fMmTOcP3+eXbt2kUqlGBsbI5lM8vLLLzM2NtaqYQohxIbVdDfQ+1UoFMhk
      MliWha6vzZlYLEZ/fz9Xr14lk8lg2zaappHL5di/fz+pVIpPP/2UoaEhTp8+3ej54/s+SimU
      Uvi+j+M4rRq+EEI88VoWANFolEqlAoTN21b5vg9AtVollUpRLpcJggClFJZl4TgOlUqFaDTK
      yMgIXV1d7NmzBwDDMDAMA6UUhmEQiURaNXwhhHjitawbqFKKt956i0QiQSaTIZPJUK1WcV2X
      8fFxyuUyr732GidPniSRSNDb20tvby/Dw8P4vs/x48f585//zM6dO4lEIhw+fHjNZ0s3UCGE
      eDAtbQcdBAGO4xCNRte85rpuY2no1mfq9TqapmGad5+cSAAIIcSDa9kSEICmaWu+/Fdf++rS
      za3PyEUzQgjxcMg5ACGE2KD+HwDdZumJ6S0nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 13' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 14' width='384'>
      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
      5u5hz5Q2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 17' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries emissions intensities by item' width='384'>
      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
      ZxRwO5AFlwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries emissions intensity ' width='384'>
      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
      ljh06NADLxFsBZORkRGCwSCpVArbtslkMjQaDaLRKPF4nK6uLp566inC4bC7U/bixYt0dXXd
      9k7VNE3Onj2L3+93j91awtgasrlXu+61BDMQCNDT00MsFnMvZqqquj0CTdPo6uracaHz+Xz0
      9fURi8Xci/vd2tO6UCqK4gaL1vFCoRDBYJCOjg63B+LxeHZ8H47jUCqVWFlZoVqtcuTIETeI
      lEol1tbWbjnnvT53qz2tIHrz52stC5aJXSGeDLseALxeLx0dHRw5coRgMMjMzAwffvghU1NT
      6LpOJBJxLxKtyVj48sJy851h64LR399Pf38/juOwsLDAxx9/zMLCAgMDA4RCIZLJJMlkkqNH
      j7K2tsb09DQffvghk5OTO+5AW5rNJufOneN3f/d3OXz4MPF43L1zvXHjxq59D52dnbcsA20N
      V/n9fsbGxvD5fO4F0bZtd99ANpulUqlQr9exbRtVVf//9u70N478PPD4t66+u9ndZDfZ4iFK
      og5StzWXx5r4SOzEWSE2NoHzwvNq94URIEiCvNl/JfGbYJE4QIzYcRzAjteyPeMNMoeUsa0d
      jW7xvppk33dd+4KukihS14gURfXzAQYz011dXVUkf0/V73ge/3p418oLJIZhMDIywsDAgJ8i
      wnEcdF0nEolsCBT3H4vjOJTLZVZWVgiHw/ze7/0euq7jOA4LCwv+TC2Pqqr+dXoYL9h4g++W
      ZflPhO12m1arRTgclvUCQrwAdvSvcP/+/bzyyiucP3+eH/zgB7z33ns0m01gvYF0XZdyeT2R
      kuM4tFotVldX/QbGdV1KpRLlcplms4mmaYyNjTE2NsbAwADFYpFSqeQvPtM0jaGhIcbGxjh8
      +DClUskfbL6f1zh5d8mwPpawtrZGsVjcyUuCoijE43H6+/uZmZkhEAiQyWTIZrOoqoppmti2
      TX9/P8VikXw+7x+TZVm0222azSau66Ioij8dc3V1lVar5e/L68ryrvfDdDodQqEQ0WgUwzBQ
      FIW1tTXm5+c3bOd1x9VqNQqFwiP3qaoq/f39LC0tMT097b8+PT3NjRs3GBsb2xP1UoV42e34
      NNBoNMqpU6col8usra3x7//+71y4cIHBwUEmJyd59913uXv3Lq1Wi3q9TqFQ2PBU0G63uXz5
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries production' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries production per capita' width='384'>
      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
      9f8BsXvugE5Bjx4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries production per capita (2)' width='384'>
      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
      3fEm6g5zhZshls1mOXLkCP/5n/+p+kI6nQ6xWIxUKqWaydyhm3cqv9tPtLOvwDAM5ufn+eyz
      zygWiyQSCdXROz09TS6XU307S0tLKnDcAHKHLgvxsHzOM/gY4U7b7/f7JBIJ/H7/Y/2hm6YJ
      oIJiZ//AzqWG71QOdzq/e4ymaffVpu1+7d1ul36/r27Sd7tO93PgZjuz2xnpNhnsvPHvxV0Z
      FP4nGHaWyXEcVSa3w3FnmdxyuM107hP8vf59LMui1+upG5ymac/dssjud93tdu/6e3gY7rBT
      d77Bnb6bVqul5jPczxpJO5mmyU9OXeWH/+f8I5dVvFieyQAQQuwfCQBxN1J/FEIIj3pm+gCE
      EI/PxGCS//W1qaddjGeS8/+berUHbFp7EUgTkBAvONM01SxxcTvLstSaVc9bv9SjkiYgIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKJkHIIQH/OSTy/zv/7v3XtXe5eA4D76i
      64tAAkAID7D6Nu3u7VtTCm+TJiAhhPAoqQGIp2pxcZFAIKA2s99rNVR30vrOFUoLhYLaW9fd
      NGXnDmqPc2an+znubl6yNLN43kgAiH1XqVT49a9/rTZNAdQa/qlUiomJCXWzdjew9/l8xOPx
      Pd+zXC5TrVYZHR1VexSUy2XW1tbIZrO7dswyTRO/38/8/Pxju85arcb29jbVapV8Pr8vm9AL
      8SRJAIh9V6lU+Pjjj2m32+rp2OfzkUwmmZiYIJPJqH0T1tfXiUajxGKxPXe4qlarXL9+nZWV
      FUKh0K4AWFlZYXZ2lkgkguM4XL9+ne3tbQKBwGMPALdMgASAeO5IAIjH5o//+I8ZHR0lkUjQ
      arVYX1/n/Pnz/OpXv2J0dJTjx4/f93tNTU0xNTV1z+PC4TBvvvnmI5T6/o2NjTE2NvZEPkuI
      x0ECQDwR7vaQMzMznDp1inA4rF4zTZNisUixWKTb7dJut8nlcoyMjDA6OorP58M0TZrNJo1G
      g0wmQyqVuuPn2LZNqVSi3W7j8/nUDbrRaHD27FkCgQCWZbG5uUkgECCRSHDgwAGy2axaLXN5
      eZlWq0W322VjY0PtBz0yMsLg4KB60m+1WqpMyWRS7QN948YNVldXyWQylMtlarUalmUxODhI
      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
      JBwOU6vVVOdvr9cjGo0+901ccLOWt7m5yblz54jFYnz729+WABDCS44dO0a32+XDDz8E/mcp
      h5///OcALCws7Hn+2NgY2WyWf/qnfyIYDDIzM/PYy/wkJRIJ5ubm+NnPfsbly5c5evQogUDg
      aRdrX6yvr3P69Gl+7/d+j6NHj96suT3tQgkhnpyJiQmuXbumlkqwbRvLsggEAiSTSQYHB287
      Z+eomnQ6TbVa5eLFi4yNjd3XOPsnaXV1lVKphGmaqh2/Vqtx/vx5tra2AJidnSWRSKj+kJ3X
      Fw6HGRkZ4eTJk6TTaUZGRtB1XQ19fZ61Wi22trawbZtqtcqNGzckAITwkunpacrlMu12mw8+
      +ECtBTQ1NUU2m2VoaGjX8bcOqcxkMtTrddbW1ohGo+Tz+SdZ/HtaXFzk0qVLbGxs0O/36fV6
      VCoVPv30U9WMk81mVae1e33u/0ciEcbHxymVShiGwfj4OJqmvRAB4DYBra6u4vf78fv9+Jzn
      dV6zEOKBOY6DbdvYtk2pVMLv96Npmnoi3jmO3m0eUjcLn0+db1kWuq7v+rvjOPT7fTRNe2oT
      pvr9viqLew0u97o0TVPX6d7Yd/ZhuNft8/lu69x2v4/nsc/DXQJZowHtAAABI0lEQVR6JwkA
      ITzIcRxarZa6Eb4InZziwUkACCGER8koICGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJ
      ACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJ
      ACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJ
      ACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJ
      ACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJACGE8CgJ
      ACGE8CgJACGE8Kj/B9MEy9/xM4qsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top-10 emission amount crops' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top-10 emission amount livestock' width='384'>
      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
      EP8/L7f+X3axKR0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Total food production by category' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total food production by country (all items)' width='384'>
      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
      FBVpAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
